searchData={"items":[{"type":"module","title":"Connector","doc":"REST API wrapper in Elixir","ref":"Connector.html"},{"type":"function","title":"Connector.handle_messages/1","doc":"","ref":"Connector.html#handle_messages/1"},{"type":"module","title":"Connector.Dia","doc":"Dia REST API wrapper in Elixir","ref":"Connector.Dia.html"},{"type":"function","title":"Connector.Dia.delete/3","doc":"Perform a DELETE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    delete(\"/users\")\n    delete(\"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\")\n    delete(client, \"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Dia.html#delete/3"},{"type":"function","title":"Connector.Dia.delete!/3","doc":"Perform a DELETE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    delete!(\"/users\")\n    delete!(\"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\")\n    delete!(client, \"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Dia.html#delete!/3"},{"type":"function","title":"Connector.Dia.get/3","doc":"Perform a GET request.\n\nSee `request/1` or `request/2` for options definition.\n\n    get(\"/users\")\n    get(\"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\")\n    get(client, \"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Dia.html#get/3"},{"type":"function","title":"Connector.Dia.get!/3","doc":"Perform a GET request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    get!(\"/users\")\n    get!(\"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\")\n    get!(client, \"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Dia.html#get!/3"},{"type":"function","title":"Connector.Dia.head/3","doc":"Perform a HEAD request.\n\nSee `request/1` or `request/2` for options definition.\n\n    head(\"/users\")\n    head(\"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\")\n    head(client, \"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Dia.html#head/3"},{"type":"function","title":"Connector.Dia.head!/3","doc":"Perform a HEAD request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    head!(\"/users\")\n    head!(\"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\")\n    head!(client, \"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Dia.html#head!/3"},{"type":"function","title":"Connector.Dia.options/3","doc":"Perform a OPTIONS request.\n\nSee `request/1` or `request/2` for options definition.\n\n    options(\"/users\")\n    options(\"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\")\n    options(client, \"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Dia.html#options/3"},{"type":"function","title":"Connector.Dia.options!/3","doc":"Perform a OPTIONS request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    options!(\"/users\")\n    options!(\"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\")\n    options!(client, \"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Dia.html#options!/3"},{"type":"function","title":"Connector.Dia.patch/4","doc":"Perform a PATCH request.\n\nSee `request/1` or `request/2` for options definition.\n\n    patch(\"/users\", %{name: \"Jon\"})\n    patch(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch(client, \"/users\", %{name: \"Jon\"})\n    patch(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Dia.html#patch/4"},{"type":"function","title":"Connector.Dia.patch!/4","doc":"Perform a PATCH request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    patch!(\"/users\", %{name: \"Jon\"})\n    patch!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch!(client, \"/users\", %{name: \"Jon\"})\n    patch!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Dia.html#patch!/4"},{"type":"function","title":"Connector.Dia.post/4","doc":"Perform a POST request.\n\nSee `request/1` or `request/2` for options definition.\n\n    post(\"/users\", %{name: \"Jon\"})\n    post(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post(client, \"/users\", %{name: \"Jon\"})\n    post(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Dia.html#post/4"},{"type":"function","title":"Connector.Dia.post!/4","doc":"Perform a POST request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    post!(\"/users\", %{name: \"Jon\"})\n    post!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post!(client, \"/users\", %{name: \"Jon\"})\n    post!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Dia.html#post!/4"},{"type":"function","title":"Connector.Dia.put/4","doc":"Perform a PUT request.\n\nSee `request/1` or `request/2` for options definition.\n\n    put(\"/users\", %{name: \"Jon\"})\n    put(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put(client, \"/users\", %{name: \"Jon\"})\n    put(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Dia.html#put/4"},{"type":"function","title":"Connector.Dia.put!/4","doc":"Perform a PUT request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    put!(\"/users\", %{name: \"Jon\"})\n    put!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put!(client, \"/users\", %{name: \"Jon\"})\n    put!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Dia.html#put!/4"},{"type":"function","title":"Connector.Dia.request/2","doc":"Perform a request.","ref":"Connector.Dia.html#request/2"},{"type":"function","title":"Options - Connector.Dia.request/2","doc":"- `:method` - the request method, one of [`:head`, `:get`, `:delete`, `:trace`, `:options`, `:post`, `:put`, `:patch`]\n- `:url` - either full url e.g. \"http://example.com/some/path\" or just \"/some/path\" if using `Tesla.Middleware.BaseUrl`\n- `:query` - a keyword list of query params, e.g. `[page: 1, per_page: 100]`\n- `:headers` - a keyworld list of headers, e.g. `[{\"content-type\", \"text/plain\"}]`\n- `:body` - depends on used middleware:\n    - by default it can be a binary\n    - if using e.g. JSON encoding middleware it can be a nested map\n    - if adapter supports it it can be a Stream with any of the above\n- `:opts` - custom, per-request middleware or adapter options","ref":"Connector.Dia.html#request/2-options"},{"type":"function","title":"Examples - Connector.Dia.request/2","doc":"ExampleApi.request(method: :get, url: \"/users/path\")\n\n    # use shortcut methods\n    ExampleApi.get(\"/users/1\")\n    ExampleApi.post(client, \"/users\", %{name: \"Jon\"})","ref":"Connector.Dia.html#request/2-examples"},{"type":"function","title":"Connector.Dia.request!/2","doc":"Perform request and raise in case of error.\n\nThis is similar to `request/2` behaviour from Tesla 0.x\n\nSee `request/2` for list of available options.","ref":"Connector.Dia.html#request!/2"},{"type":"function","title":"Connector.Dia.send/1","doc":"Virtual Dia REST API","ref":"Connector.Dia.html#send/1"},{"type":"function","title":"Example - Connector.Dia.send/1","doc":"iex> Connector.Dia.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"send\"}}\n    iex> Connector.Dia.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"error\"}}","ref":"Connector.Dia.html#send/1-example"},{"type":"function","title":"Connector.Dia.trace/3","doc":"Perform a TRACE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    trace(\"/users\")\n    trace(\"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\")\n    trace(client, \"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Dia.html#trace/3"},{"type":"function","title":"Connector.Dia.trace!/3","doc":"Perform a TRACE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    trace!(\"/users\")\n    trace!(\"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\")\n    trace!(client, \"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Dia.html#trace!/3"},{"type":"type","title":"Connector.Dia.option/0","doc":"Options that may be passed to a request function. See `request/2` for detailed descriptions.","ref":"Connector.Dia.html#t:option/0"},{"type":"module","title":"Connector.DiaHandler","doc":"Dia external api calls.","ref":"Connector.DiaHandler.html"},{"type":"function","title":"Connector.DiaHandler.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Connector.DiaHandler.html#child_spec/1"},{"type":"function","title":"Connector.DiaHandler.get_status/1","doc":"","ref":"Connector.DiaHandler.html#get_status/1"},{"type":"function","title":"Connector.DiaHandler.handle_continue/2","doc":"","ref":"Connector.DiaHandler.html#handle_continue/2"},{"type":"function","title":"Connector.DiaHandler.init/1","doc":"","ref":"Connector.DiaHandler.html#init/1"},{"type":"function","title":"Connector.DiaHandler.start_link/1","doc":"","ref":"Connector.DiaHandler.html#start_link/1"},{"type":"function","title":"Connector.DiaHandler.stop/1","doc":"","ref":"Connector.DiaHandler.html#stop/1"},{"type":"module","title":"Connector.HTTPClient","doc":"Http web client for api calls.","ref":"Connector.HTTPClient.html"},{"type":"function","title":"Connector.HTTPClient.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Connector.HTTPClient.html#child_spec/1"},{"type":"function","title":"Connector.HTTPClient.get_state/1","doc":"Get information by process.","ref":"Connector.HTTPClient.html#get_state/1"},{"type":"function","title":"Example. - Connector.HTTPClient.get_state/1","doc":"iex> struct = Core.Repo.all(Core.Spring.Message) |> List.last |> Map.from_struct\n    iex> args = Map.merge(struct, %{connector: \"vodafone\"})\n    iex> {:ok, pid} = Connector.HTTPClient.start_link(args)\n    {:ok, pid}\n    iex> Connector.HTTPClient.get_state(pid)\n    :timeout\n    iex> {:ok, pid} = Connector.HTTPClient.stop(pid)\n    :ok","ref":"Connector.HTTPClient.html#get_state/1-example"},{"type":"function","title":"Connector.HTTPClient.handle_continue/2","doc":"","ref":"Connector.HTTPClient.html#handle_continue/2"},{"type":"function","title":"Connector.HTTPClient.init/1","doc":"","ref":"Connector.HTTPClient.html#init/1"},{"type":"function","title":"Connector.HTTPClient.start_link/1","doc":"Client HTTP Request & Response Service.","ref":"Connector.HTTPClient.html#start_link/1"},{"type":"function","title":"Example. - Connector.HTTPClient.start_link/1","doc":"iex> struct = Core.Repo.all(Core.Spring.Message) |> List.last |> Map.from_struct\n    iex> args = Map.merge(struct, %{connector: \"vodafone\"})\n    iex> {:ok, pid} = Connector.HTTPClient.start_link(args)\n    {:ok, pid}\n    Received arguments: %{id: \"Ac7y2LxiD9lsV2Oeiu\", connector: \"vodafone\", message_body: \"Ваш код - 7777-999-9999-9999 - vodafone\", phone_number: \"+380991111111\"}\n    Received arguments: %{id: \"Ac7y2LxiD9lsV2Oeiu\", status: \"send\", text: \"Ваш код - 7777-999-9999-9999 - vodafone\", connector: \"vodafone\", sms: \"+380991111111\"}\n    Received arguments: %{id: \"Ac7y2LxiD9lsV2Oeiu\", status: \"delivered\", text: \"Ваш код - 7777-999-9999-9999 - vodafone\", connector: \"vodafone\", sms: \"+380991111111\"}\n    iex> Connector.HTTPClient.get_state(pid)\n    %{\n      connector: \"vodafone\",\n      id: \"Ac7y2LxiD9lsV2Oeiu\",\n      sms: \"+380991111111\",\n      status: \"delivered\",\n      text: \"Ваш код - 7777-999-9999-9999 - vodafone\"\n    }\n    iex> {:ok, pid} = Connector.HTTPClient.stop(pid)\n\n    iex> {:ok, pid} = Connector.HTTPClient.start_link(args)\n    {:ok, pid}\n    Received arguments: %{id: \"Ac7y2LxiD9lsV2Oeiu\", connector: \"vodafone\", message_body: \"Ваш код - 7777-999-9999-9999 - vodafone\", phone_number: \"+380991111111\"}\n    Received arguments: %{id: \"Ac7y2LxiD9lsV2Oeiu\", status: \"send\", text: \"Ваш код - 7777-999-9999-9999 - vodafone\", connector: \"vodafone\", sms: \"+380991111111\"}\n    Received arguments: %{id: \"Ac7y2LxiD9lsV2Oeiu\", status: \"delivered\", text: \"Ваш код - 7777-999-9999-9999 - vodafone\", connector: \"vodafone\", sms: \"+380991111111\"}\n    iex> Connector.HTTPClient.get_state(pid)\n    :error\n    iex> {:ok, pid} = Connector.HTTPClient.stop(pid)\n\n    iex> {:ok, pid} = Connector.HTTPClient.start_link(args)\n    {:ok, pid}\n    Received arguments: %{id: \"Ac7y2LxiD9lsV2Oeiu\", connector: \"vodafone\", message_body: \"Ваш код - 7777-999-9999-9999 - vodafone\", phone_number: \"+380991111111\"}\n    Received arguments: %{id: \"Ac7y2LxiD9lsV2Oeiu\", status: \"send\", text: \"Ваш код - 7777-999-9999-9999 - vodafone\", connector: \"vodafone\", sms: \"+380991111111\"}\n    Received arguments: %{id: \"Ac7y2LxiD9lsV2Oeiu\", status: \"delivered\", text: \"Ваш код - 7777-999-9999-9999 - vodafone\", connector: \"vodafone\", sms: \"+380991111111\"}\n    iex> Connector.HTTPClient.get_state(pid)\n    :timeout\n    iex> {:ok, pid} = Connector.HTTPClient.stop(pid)","ref":"Connector.HTTPClient.html#start_link/1-example"},{"type":"function","title":"Connector.HTTPClient.stop/1","doc":"","ref":"Connector.HTTPClient.html#stop/1"},{"type":"module","title":"Connector.HTTPServer","doc":"Http web server for api calls.","ref":"Connector.HTTPServer.html"},{"type":"function","title":"Connector.HTTPServer.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Connector.HTTPServer.html#child_spec/1"},{"type":"function","title":"Connector.HTTPServer.get_status/5","doc":"","ref":"Connector.HTTPServer.html#get_status/5"},{"type":"function","title":"Connector.HTTPServer.handle_continue/2","doc":"","ref":"Connector.HTTPServer.html#handle_continue/2"},{"type":"function","title":"Connector.HTTPServer.init/1","doc":"","ref":"Connector.HTTPServer.html#init/1"},{"type":"function","title":"Connector.HTTPServer.start_link/1","doc":"Server HTTP Request & Response Service.","ref":"Connector.HTTPServer.html#start_link/1"},{"type":"function","title":"Example. - Connector.HTTPServer.start_link/1","doc":"iex> args = %{connector: \"vodafone\", id: FlakeId.get, phone_number: \"+380991111111\", message_body: \"Aloha!\"}\n    iex> {:ok, pid} = Connector.HTTPServer.start_link(args)\n    {:ok, pid}\n    Received arguments: %{id: \"Ac4B2O2hMTwoBGc7vc\", connector: \"vodafone\", phone_number: \"+380991111111\", message_body: \"Aloha!\"}\n    Received arguments: %{id: \"Ac4B2O2hMTwoBGc7vc\", status: \"send\", text: \"Aloha!\", connector: \"vodafone\", sms: \"+380991111111\"}\n    Received arguments: %{id: \"Ac4B2O2hMTwoBGc7vc\", status: \"delivered\", text: \"Aloha!\", connector: \"vodafone\", sms: \"+380991111111\"}\n    iex> :sys.get_state(pid)\n    %{id: \"Ac49dpJdkaGO4kKHb6\", status: \"delivered\", text: \"Aloha!\", connector: \"vodafone\", sms: \"+380997170609\"}\n    iex> Connector.HTTPServer.get_status\n    %{id: \"Ac49dpJdkaGO4kKHb6\", status: \"delivered\", text: \"Aloha!\", connector: \"vodafone\", sms: \"+380991111111\"}\n    iex> Connector.HTTPServer.stop(pid)\n    :ok\n\n    iex> args = %{connector: \"vodafone\", id: FlakeId.get, phone_number: \"+380991111111\", message_body: \"Aloha!\"}\n    iex> {:ok, pid} = Connector.HTTPServer.start_link(args)\n    {:ok, pid}\n    Received arguments: %{id: \"Ac4BAqSjeT8A2A8ZBg\", connector: \"vodafone\", phone_number: \"+380991111111\", message_body: \"Aloha!\"}\n    Received arguments: %{id: \"Ac4BAqSjeT8A2A8ZBg\", status: \"send\", text: \"Aloha!\", connector: \"vodafone\", sms: \"+380991111111\"}\n    iex> Connector.HTTPServer.get_status\n    :timeout\n    Received arguments: %{id: \"Ac4BAqSjeT8A2A8ZBg\", status: \"delivered\", text: \"Aloha!\", connector: \"vodafone\", sms: \"+380991111111\"}\n    iex> Connector.HTTPServer.stop(pid)\n    :ok","ref":"Connector.HTTPServer.html#start_link/1-example"},{"type":"function","title":"Connector.HTTPServer.stop/1","doc":"","ref":"Connector.HTTPServer.html#stop/1"},{"type":"module","title":"Connector.Intertelecom","doc":"Intertelecom REST API wrapper in Elixir","ref":"Connector.Intertelecom.html"},{"type":"function","title":"Connector.Intertelecom.delete/3","doc":"Perform a DELETE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    delete(\"/users\")\n    delete(\"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\")\n    delete(client, \"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Intertelecom.html#delete/3"},{"type":"function","title":"Connector.Intertelecom.delete!/3","doc":"Perform a DELETE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    delete!(\"/users\")\n    delete!(\"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\")\n    delete!(client, \"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Intertelecom.html#delete!/3"},{"type":"function","title":"Connector.Intertelecom.get/3","doc":"Perform a GET request.\n\nSee `request/1` or `request/2` for options definition.\n\n    get(\"/users\")\n    get(\"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\")\n    get(client, \"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Intertelecom.html#get/3"},{"type":"function","title":"Connector.Intertelecom.get!/3","doc":"Perform a GET request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    get!(\"/users\")\n    get!(\"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\")\n    get!(client, \"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Intertelecom.html#get!/3"},{"type":"function","title":"Connector.Intertelecom.head/3","doc":"Perform a HEAD request.\n\nSee `request/1` or `request/2` for options definition.\n\n    head(\"/users\")\n    head(\"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\")\n    head(client, \"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Intertelecom.html#head/3"},{"type":"function","title":"Connector.Intertelecom.head!/3","doc":"Perform a HEAD request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    head!(\"/users\")\n    head!(\"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\")\n    head!(client, \"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Intertelecom.html#head!/3"},{"type":"function","title":"Connector.Intertelecom.options/3","doc":"Perform a OPTIONS request.\n\nSee `request/1` or `request/2` for options definition.\n\n    options(\"/users\")\n    options(\"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\")\n    options(client, \"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Intertelecom.html#options/3"},{"type":"function","title":"Connector.Intertelecom.options!/3","doc":"Perform a OPTIONS request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    options!(\"/users\")\n    options!(\"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\")\n    options!(client, \"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Intertelecom.html#options!/3"},{"type":"function","title":"Connector.Intertelecom.patch/4","doc":"Perform a PATCH request.\n\nSee `request/1` or `request/2` for options definition.\n\n    patch(\"/users\", %{name: \"Jon\"})\n    patch(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch(client, \"/users\", %{name: \"Jon\"})\n    patch(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Intertelecom.html#patch/4"},{"type":"function","title":"Connector.Intertelecom.patch!/4","doc":"Perform a PATCH request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    patch!(\"/users\", %{name: \"Jon\"})\n    patch!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch!(client, \"/users\", %{name: \"Jon\"})\n    patch!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Intertelecom.html#patch!/4"},{"type":"function","title":"Connector.Intertelecom.post/4","doc":"Perform a POST request.\n\nSee `request/1` or `request/2` for options definition.\n\n    post(\"/users\", %{name: \"Jon\"})\n    post(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post(client, \"/users\", %{name: \"Jon\"})\n    post(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Intertelecom.html#post/4"},{"type":"function","title":"Connector.Intertelecom.post!/4","doc":"Perform a POST request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    post!(\"/users\", %{name: \"Jon\"})\n    post!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post!(client, \"/users\", %{name: \"Jon\"})\n    post!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Intertelecom.html#post!/4"},{"type":"function","title":"Connector.Intertelecom.put/4","doc":"Perform a PUT request.\n\nSee `request/1` or `request/2` for options definition.\n\n    put(\"/users\", %{name: \"Jon\"})\n    put(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put(client, \"/users\", %{name: \"Jon\"})\n    put(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Intertelecom.html#put/4"},{"type":"function","title":"Connector.Intertelecom.put!/4","doc":"Perform a PUT request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    put!(\"/users\", %{name: \"Jon\"})\n    put!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put!(client, \"/users\", %{name: \"Jon\"})\n    put!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Intertelecom.html#put!/4"},{"type":"function","title":"Connector.Intertelecom.request/2","doc":"Perform a request.","ref":"Connector.Intertelecom.html#request/2"},{"type":"function","title":"Options - Connector.Intertelecom.request/2","doc":"- `:method` - the request method, one of [`:head`, `:get`, `:delete`, `:trace`, `:options`, `:post`, `:put`, `:patch`]\n- `:url` - either full url e.g. \"http://example.com/some/path\" or just \"/some/path\" if using `Tesla.Middleware.BaseUrl`\n- `:query` - a keyword list of query params, e.g. `[page: 1, per_page: 100]`\n- `:headers` - a keyworld list of headers, e.g. `[{\"content-type\", \"text/plain\"}]`\n- `:body` - depends on used middleware:\n    - by default it can be a binary\n    - if using e.g. JSON encoding middleware it can be a nested map\n    - if adapter supports it it can be a Stream with any of the above\n- `:opts` - custom, per-request middleware or adapter options","ref":"Connector.Intertelecom.html#request/2-options"},{"type":"function","title":"Examples - Connector.Intertelecom.request/2","doc":"ExampleApi.request(method: :get, url: \"/users/path\")\n\n    # use shortcut methods\n    ExampleApi.get(\"/users/1\")\n    ExampleApi.post(client, \"/users\", %{name: \"Jon\"})","ref":"Connector.Intertelecom.html#request/2-examples"},{"type":"function","title":"Connector.Intertelecom.request!/2","doc":"Perform request and raise in case of error.\n\nThis is similar to `request/2` behaviour from Tesla 0.x\n\nSee `request/2` for list of available options.","ref":"Connector.Intertelecom.html#request!/2"},{"type":"function","title":"Connector.Intertelecom.send/1","doc":"Virtual Intertelecom REST API","ref":"Connector.Intertelecom.html#send/1"},{"type":"function","title":"Example - Connector.Intertelecom.send/1","doc":"iex> Connector.Intertelecom.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"send\"}}\n    iex> Connector.Intertelecom.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"error\"}}","ref":"Connector.Intertelecom.html#send/1-example"},{"type":"function","title":"Connector.Intertelecom.trace/3","doc":"Perform a TRACE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    trace(\"/users\")\n    trace(\"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\")\n    trace(client, \"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Intertelecom.html#trace/3"},{"type":"function","title":"Connector.Intertelecom.trace!/3","doc":"Perform a TRACE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    trace!(\"/users\")\n    trace!(\"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\")\n    trace!(client, \"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Intertelecom.html#trace!/3"},{"type":"type","title":"Connector.Intertelecom.option/0","doc":"Options that may be passed to a request function. See `request/2` for detailed descriptions.","ref":"Connector.Intertelecom.html#t:option/0"},{"type":"module","title":"Connector.IntertelecomHandler","doc":"Intertelecom external api calls.","ref":"Connector.IntertelecomHandler.html"},{"type":"function","title":"Connector.IntertelecomHandler.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Connector.IntertelecomHandler.html#child_spec/1"},{"type":"function","title":"Connector.IntertelecomHandler.get_status/1","doc":"","ref":"Connector.IntertelecomHandler.html#get_status/1"},{"type":"function","title":"Connector.IntertelecomHandler.handle_continue/2","doc":"","ref":"Connector.IntertelecomHandler.html#handle_continue/2"},{"type":"function","title":"Connector.IntertelecomHandler.init/1","doc":"","ref":"Connector.IntertelecomHandler.html#init/1"},{"type":"function","title":"Connector.IntertelecomHandler.start_link/1","doc":"","ref":"Connector.IntertelecomHandler.html#start_link/1"},{"type":"function","title":"Connector.IntertelecomHandler.stop/1","doc":"","ref":"Connector.IntertelecomHandler.html#stop/1"},{"type":"module","title":"Connector.Kyivstar","doc":"Kyivstar REST API wrapper in Elixir","ref":"Connector.Kyivstar.html"},{"type":"function","title":"Connector.Kyivstar.delete/3","doc":"Perform a DELETE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    delete(\"/users\")\n    delete(\"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\")\n    delete(client, \"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Kyivstar.html#delete/3"},{"type":"function","title":"Connector.Kyivstar.delete!/3","doc":"Perform a DELETE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    delete!(\"/users\")\n    delete!(\"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\")\n    delete!(client, \"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Kyivstar.html#delete!/3"},{"type":"function","title":"Connector.Kyivstar.get/3","doc":"Perform a GET request.\n\nSee `request/1` or `request/2` for options definition.\n\n    get(\"/users\")\n    get(\"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\")\n    get(client, \"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Kyivstar.html#get/3"},{"type":"function","title":"Connector.Kyivstar.get!/3","doc":"Perform a GET request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    get!(\"/users\")\n    get!(\"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\")\n    get!(client, \"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Kyivstar.html#get!/3"},{"type":"function","title":"Connector.Kyivstar.head/3","doc":"Perform a HEAD request.\n\nSee `request/1` or `request/2` for options definition.\n\n    head(\"/users\")\n    head(\"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\")\n    head(client, \"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Kyivstar.html#head/3"},{"type":"function","title":"Connector.Kyivstar.head!/3","doc":"Perform a HEAD request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    head!(\"/users\")\n    head!(\"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\")\n    head!(client, \"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Kyivstar.html#head!/3"},{"type":"function","title":"Connector.Kyivstar.options/3","doc":"Perform a OPTIONS request.\n\nSee `request/1` or `request/2` for options definition.\n\n    options(\"/users\")\n    options(\"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\")\n    options(client, \"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Kyivstar.html#options/3"},{"type":"function","title":"Connector.Kyivstar.options!/3","doc":"Perform a OPTIONS request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    options!(\"/users\")\n    options!(\"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\")\n    options!(client, \"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Kyivstar.html#options!/3"},{"type":"function","title":"Connector.Kyivstar.patch/4","doc":"Perform a PATCH request.\n\nSee `request/1` or `request/2` for options definition.\n\n    patch(\"/users\", %{name: \"Jon\"})\n    patch(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch(client, \"/users\", %{name: \"Jon\"})\n    patch(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Kyivstar.html#patch/4"},{"type":"function","title":"Connector.Kyivstar.patch!/4","doc":"Perform a PATCH request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    patch!(\"/users\", %{name: \"Jon\"})\n    patch!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch!(client, \"/users\", %{name: \"Jon\"})\n    patch!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Kyivstar.html#patch!/4"},{"type":"function","title":"Connector.Kyivstar.post/4","doc":"Perform a POST request.\n\nSee `request/1` or `request/2` for options definition.\n\n    post(\"/users\", %{name: \"Jon\"})\n    post(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post(client, \"/users\", %{name: \"Jon\"})\n    post(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Kyivstar.html#post/4"},{"type":"function","title":"Connector.Kyivstar.post!/4","doc":"Perform a POST request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    post!(\"/users\", %{name: \"Jon\"})\n    post!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post!(client, \"/users\", %{name: \"Jon\"})\n    post!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Kyivstar.html#post!/4"},{"type":"function","title":"Connector.Kyivstar.put/4","doc":"Perform a PUT request.\n\nSee `request/1` or `request/2` for options definition.\n\n    put(\"/users\", %{name: \"Jon\"})\n    put(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put(client, \"/users\", %{name: \"Jon\"})\n    put(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Kyivstar.html#put/4"},{"type":"function","title":"Connector.Kyivstar.put!/4","doc":"Perform a PUT request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    put!(\"/users\", %{name: \"Jon\"})\n    put!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put!(client, \"/users\", %{name: \"Jon\"})\n    put!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Kyivstar.html#put!/4"},{"type":"function","title":"Connector.Kyivstar.request/2","doc":"Perform a request.","ref":"Connector.Kyivstar.html#request/2"},{"type":"function","title":"Options - Connector.Kyivstar.request/2","doc":"- `:method` - the request method, one of [`:head`, `:get`, `:delete`, `:trace`, `:options`, `:post`, `:put`, `:patch`]\n- `:url` - either full url e.g. \"http://example.com/some/path\" or just \"/some/path\" if using `Tesla.Middleware.BaseUrl`\n- `:query` - a keyword list of query params, e.g. `[page: 1, per_page: 100]`\n- `:headers` - a keyworld list of headers, e.g. `[{\"content-type\", \"text/plain\"}]`\n- `:body` - depends on used middleware:\n    - by default it can be a binary\n    - if using e.g. JSON encoding middleware it can be a nested map\n    - if adapter supports it it can be a Stream with any of the above\n- `:opts` - custom, per-request middleware or adapter options","ref":"Connector.Kyivstar.html#request/2-options"},{"type":"function","title":"Examples - Connector.Kyivstar.request/2","doc":"ExampleApi.request(method: :get, url: \"/users/path\")\n\n    # use shortcut methods\n    ExampleApi.get(\"/users/1\")\n    ExampleApi.post(client, \"/users\", %{name: \"Jon\"})","ref":"Connector.Kyivstar.html#request/2-examples"},{"type":"function","title":"Connector.Kyivstar.request!/2","doc":"Perform request and raise in case of error.\n\nThis is similar to `request/2` behaviour from Tesla 0.x\n\nSee `request/2` for list of available options.","ref":"Connector.Kyivstar.html#request!/2"},{"type":"function","title":"Connector.Kyivstar.send/1","doc":"Virtual Kyivstar REST API","ref":"Connector.Kyivstar.html#send/1"},{"type":"function","title":"Example - Connector.Kyivstar.send/1","doc":"iex> Connector.Kyivstar.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"send\"}}\n    iex> Connector.Kyivstar.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"error\"}}","ref":"Connector.Kyivstar.html#send/1-example"},{"type":"function","title":"Connector.Kyivstar.trace/3","doc":"Perform a TRACE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    trace(\"/users\")\n    trace(\"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\")\n    trace(client, \"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Kyivstar.html#trace/3"},{"type":"function","title":"Connector.Kyivstar.trace!/3","doc":"Perform a TRACE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    trace!(\"/users\")\n    trace!(\"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\")\n    trace!(client, \"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Kyivstar.html#trace!/3"},{"type":"type","title":"Connector.Kyivstar.option/0","doc":"Options that may be passed to a request function. See `request/2` for detailed descriptions.","ref":"Connector.Kyivstar.html#t:option/0"},{"type":"module","title":"Connector.KyivstarHandler","doc":"Kyivstar external api calls.","ref":"Connector.KyivstarHandler.html"},{"type":"function","title":"Connector.KyivstarHandler.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Connector.KyivstarHandler.html#child_spec/1"},{"type":"function","title":"Connector.KyivstarHandler.get_status/1","doc":"","ref":"Connector.KyivstarHandler.html#get_status/1"},{"type":"function","title":"Connector.KyivstarHandler.handle_continue/2","doc":"","ref":"Connector.KyivstarHandler.html#handle_continue/2"},{"type":"function","title":"Connector.KyivstarHandler.init/1","doc":"","ref":"Connector.KyivstarHandler.html#init/1"},{"type":"function","title":"Connector.KyivstarHandler.start_link/1","doc":"","ref":"Connector.KyivstarHandler.html#start_link/1"},{"type":"function","title":"Connector.KyivstarHandler.stop/1","doc":"","ref":"Connector.KyivstarHandler.html#stop/1"},{"type":"module","title":"Connector.Lifecell","doc":"Lifecell REST API wrapper in Elixir","ref":"Connector.Lifecell.html"},{"type":"function","title":"Connector.Lifecell.delete/3","doc":"Perform a DELETE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    delete(\"/users\")\n    delete(\"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\")\n    delete(client, \"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Lifecell.html#delete/3"},{"type":"function","title":"Connector.Lifecell.delete!/3","doc":"Perform a DELETE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    delete!(\"/users\")\n    delete!(\"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\")\n    delete!(client, \"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Lifecell.html#delete!/3"},{"type":"function","title":"Connector.Lifecell.get/3","doc":"Perform a GET request.\n\nSee `request/1` or `request/2` for options definition.\n\n    get(\"/users\")\n    get(\"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\")\n    get(client, \"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Lifecell.html#get/3"},{"type":"function","title":"Connector.Lifecell.get!/3","doc":"Perform a GET request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    get!(\"/users\")\n    get!(\"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\")\n    get!(client, \"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Lifecell.html#get!/3"},{"type":"function","title":"Connector.Lifecell.head/3","doc":"Perform a HEAD request.\n\nSee `request/1` or `request/2` for options definition.\n\n    head(\"/users\")\n    head(\"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\")\n    head(client, \"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Lifecell.html#head/3"},{"type":"function","title":"Connector.Lifecell.head!/3","doc":"Perform a HEAD request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    head!(\"/users\")\n    head!(\"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\")\n    head!(client, \"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Lifecell.html#head!/3"},{"type":"function","title":"Connector.Lifecell.options/3","doc":"Perform a OPTIONS request.\n\nSee `request/1` or `request/2` for options definition.\n\n    options(\"/users\")\n    options(\"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\")\n    options(client, \"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Lifecell.html#options/3"},{"type":"function","title":"Connector.Lifecell.options!/3","doc":"Perform a OPTIONS request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    options!(\"/users\")\n    options!(\"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\")\n    options!(client, \"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Lifecell.html#options!/3"},{"type":"function","title":"Connector.Lifecell.patch/4","doc":"Perform a PATCH request.\n\nSee `request/1` or `request/2` for options definition.\n\n    patch(\"/users\", %{name: \"Jon\"})\n    patch(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch(client, \"/users\", %{name: \"Jon\"})\n    patch(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Lifecell.html#patch/4"},{"type":"function","title":"Connector.Lifecell.patch!/4","doc":"Perform a PATCH request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    patch!(\"/users\", %{name: \"Jon\"})\n    patch!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch!(client, \"/users\", %{name: \"Jon\"})\n    patch!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Lifecell.html#patch!/4"},{"type":"function","title":"Connector.Lifecell.post/4","doc":"Perform a POST request.\n\nSee `request/1` or `request/2` for options definition.\n\n    post(\"/users\", %{name: \"Jon\"})\n    post(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post(client, \"/users\", %{name: \"Jon\"})\n    post(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Lifecell.html#post/4"},{"type":"function","title":"Connector.Lifecell.post!/4","doc":"Perform a POST request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    post!(\"/users\", %{name: \"Jon\"})\n    post!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post!(client, \"/users\", %{name: \"Jon\"})\n    post!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Lifecell.html#post!/4"},{"type":"function","title":"Connector.Lifecell.put/4","doc":"Perform a PUT request.\n\nSee `request/1` or `request/2` for options definition.\n\n    put(\"/users\", %{name: \"Jon\"})\n    put(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put(client, \"/users\", %{name: \"Jon\"})\n    put(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Lifecell.html#put/4"},{"type":"function","title":"Connector.Lifecell.put!/4","doc":"Perform a PUT request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    put!(\"/users\", %{name: \"Jon\"})\n    put!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put!(client, \"/users\", %{name: \"Jon\"})\n    put!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Lifecell.html#put!/4"},{"type":"function","title":"Connector.Lifecell.request/2","doc":"Perform a request.","ref":"Connector.Lifecell.html#request/2"},{"type":"function","title":"Options - Connector.Lifecell.request/2","doc":"- `:method` - the request method, one of [`:head`, `:get`, `:delete`, `:trace`, `:options`, `:post`, `:put`, `:patch`]\n- `:url` - either full url e.g. \"http://example.com/some/path\" or just \"/some/path\" if using `Tesla.Middleware.BaseUrl`\n- `:query` - a keyword list of query params, e.g. `[page: 1, per_page: 100]`\n- `:headers` - a keyworld list of headers, e.g. `[{\"content-type\", \"text/plain\"}]`\n- `:body` - depends on used middleware:\n    - by default it can be a binary\n    - if using e.g. JSON encoding middleware it can be a nested map\n    - if adapter supports it it can be a Stream with any of the above\n- `:opts` - custom, per-request middleware or adapter options","ref":"Connector.Lifecell.html#request/2-options"},{"type":"function","title":"Examples - Connector.Lifecell.request/2","doc":"ExampleApi.request(method: :get, url: \"/users/path\")\n\n    # use shortcut methods\n    ExampleApi.get(\"/users/1\")\n    ExampleApi.post(client, \"/users\", %{name: \"Jon\"})","ref":"Connector.Lifecell.html#request/2-examples"},{"type":"function","title":"Connector.Lifecell.request!/2","doc":"Perform request and raise in case of error.\n\nThis is similar to `request/2` behaviour from Tesla 0.x\n\nSee `request/2` for list of available options.","ref":"Connector.Lifecell.html#request!/2"},{"type":"function","title":"Connector.Lifecell.send/1","doc":"Virtual Lifecell REST API","ref":"Connector.Lifecell.html#send/1"},{"type":"function","title":"Example - Connector.Lifecell.send/1","doc":"iex> Connector.Lifecell.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"send\"}}\n    iex> Connector.Lifecell.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"error\"}}","ref":"Connector.Lifecell.html#send/1-example"},{"type":"function","title":"Connector.Lifecell.trace/3","doc":"Perform a TRACE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    trace(\"/users\")\n    trace(\"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\")\n    trace(client, \"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Lifecell.html#trace/3"},{"type":"function","title":"Connector.Lifecell.trace!/3","doc":"Perform a TRACE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    trace!(\"/users\")\n    trace!(\"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\")\n    trace!(client, \"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Lifecell.html#trace!/3"},{"type":"type","title":"Connector.Lifecell.option/0","doc":"Options that may be passed to a request function. See `request/2` for detailed descriptions.","ref":"Connector.Lifecell.html#t:option/0"},{"type":"module","title":"Connector.LifecellHandler","doc":"Lifecell external api calls.","ref":"Connector.LifecellHandler.html"},{"type":"function","title":"Connector.LifecellHandler.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Connector.LifecellHandler.html#child_spec/1"},{"type":"function","title":"Connector.LifecellHandler.get_status/1","doc":"","ref":"Connector.LifecellHandler.html#get_status/1"},{"type":"function","title":"Connector.LifecellHandler.handle_continue/2","doc":"","ref":"Connector.LifecellHandler.html#handle_continue/2"},{"type":"function","title":"Connector.LifecellHandler.init/1","doc":"","ref":"Connector.LifecellHandler.html#init/1"},{"type":"function","title":"Connector.LifecellHandler.start_link/1","doc":"","ref":"Connector.LifecellHandler.html#start_link/1"},{"type":"function","title":"Connector.LifecellHandler.stop/1","doc":"","ref":"Connector.LifecellHandler.html#stop/1"},{"type":"module","title":"Connector.Monitor","doc":"This module allows you to connect to Kafka and consume messages\nwithout crashing your app when Kafka goes offline. In the event\nof a Kafka outage it will attempt to reconnect once a minute.","ref":"Connector.Monitor.html"},{"type":"function","title":"Connector.Monitor.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Connector.Monitor.html#child_spec/1"},{"type":"function","title":"Connector.Monitor.produce/2","doc":"Send messages to Kafka.","ref":"Connector.Monitor.html#produce/2"},{"type":"function","title":"Example. - Connector.Monitor.produce/2","doc":"iex> id = \"Ac7y2LxiD9lsV2Oeiu\"\n      iex> topic = \"MyTopic\"\n      iex> message = ~s({\"status\":\"send\",\"text\":\"Ваш код - 7777-999-9999-9999 - vodafone\",\"connector\":\"vodafone\",\"sms\":\"+380991111111\",\"ts\":1702562061400})\n      iex> messages = [%{key: id, value: message}]\n      iex> Connector.Monitor.produce(topic, messages)\n      :ok","ref":"Connector.Monitor.html#produce/2-example"},{"type":"function","title":"Connector.Monitor.set_produce_response/1","doc":"","ref":"Connector.Monitor.html#set_produce_response/1"},{"type":"function","title":"Connector.Monitor.start_link/1","doc":"Server up Server `Connector.Monitor`.","ref":"Connector.Monitor.html#start_link/1"},{"type":"function","title":"Example. - Connector.Monitor.start_link/1","doc":"iex> {:ok, monitor} = Connector.Monitor.start_link([])\n    iex> :sys.get_state(monitor)\n    {%{}, %{}, #Reference , %{}}\n    iex> :sys.get_status(monitor)\n    iex> Process.whereis(KaffeMonitor) == monitor\n    true","ref":"Connector.Monitor.html#start_link/1-example"},{"type":"function","title":"Connector.Monitor.up/0","doc":"","ref":"Connector.Monitor.html#up/0"},{"type":"module","title":"Connector.Producer","doc":"Documentation for `Producer` by Kafka.","ref":"Connector.Producer.html"},{"type":"function","title":"Connector.Producer.runner/1","doc":"Send attributes of Message by Kafka.","ref":"Connector.Producer.html#runner/1"},{"type":"function","title":"Example. - Connector.Producer.runner/1","doc":"iex> args = %{id: \"AcV6bF6mODc3JIsGf2\", phone_number: \"+380997170609\", message_body: \"Ваш код - 7777-999-9999-9999\"}\n    iex> Connector.Producer.runner(args)\n    :ok\n    iex>[data] = :ets.lookup(:kafka, \"AcV6bF6mODc3JIsGf2\")\n    [{\"AcV6bF6mODc3JIsGf2\", \"{\"status\":\"send\",\"text\":\"Ваш код - 7777-999-9999-9999\",\"connector\":\"vodafone\",\"sms\":\"+380997170609\",\"ts\":1702542761151}\"}]\n    iex> data |> elem(0)\n    \"AcV6bF6mODc3JIsGf2\"\n    iex> data |> elem(1)\n    \"{\"status\":\"send\",\"text\":\"Ваш код - 7777-999-9999-9999\",\"connector\":\"vodafone\",\"sms\":\"+380997170609\",\"ts\":1702542761151}\"\n\n    iex> :ets.lookup_element(:kafka, \"AcV6bF6mODc3JIsGf2\", 1)\n    \"AcV6bF6mODc3JIsGf2\"\n    iex> :ets.lookup_element(:kafka, \"AcV6bF6mODc3JIsGf2\", 2)\n    \"{\"status\":\"send\",\"text\":\"Ваш код - 7777-999-9999-9999\",\"connector\":\"vodafone\",\"sms\":\"+380997170609\",\"ts\":1702542761151}\"\n\n    iex> :ets.lookup_element(:kafka, \"AcV6bF6mODc3JIsGf2\", 2) |> String.split(\", \")\n    [\"{\"status\":\"send\",\"text\":\"Ваш код - 7777-999-9999-9999\",\"connector\":\"vodafone\",\"sms\":\"+380997170609\",\"ts\":1702542761151}\"]\n\n    iex> :ets.delete(:kafka, \"AcV6bF6mODc3JIsGf2\")\n    true","ref":"Connector.Producer.html#runner/1-example"},{"type":"module","title":"Connector.Telegram","doc":"Lifecell REST API wrapper in Elixir","ref":"Connector.Telegram.html"},{"type":"function","title":"Connector.Telegram.delete/3","doc":"Perform a DELETE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    delete(\"/users\")\n    delete(\"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\")\n    delete(client, \"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Telegram.html#delete/3"},{"type":"function","title":"Connector.Telegram.delete!/3","doc":"Perform a DELETE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    delete!(\"/users\")\n    delete!(\"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\")\n    delete!(client, \"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Telegram.html#delete!/3"},{"type":"function","title":"Connector.Telegram.get/3","doc":"Perform a GET request.\n\nSee `request/1` or `request/2` for options definition.\n\n    get(\"/users\")\n    get(\"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\")\n    get(client, \"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Telegram.html#get/3"},{"type":"function","title":"Connector.Telegram.get!/3","doc":"Perform a GET request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    get!(\"/users\")\n    get!(\"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\")\n    get!(client, \"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Telegram.html#get!/3"},{"type":"function","title":"Connector.Telegram.head/3","doc":"Perform a HEAD request.\n\nSee `request/1` or `request/2` for options definition.\n\n    head(\"/users\")\n    head(\"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\")\n    head(client, \"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Telegram.html#head/3"},{"type":"function","title":"Connector.Telegram.head!/3","doc":"Perform a HEAD request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    head!(\"/users\")\n    head!(\"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\")\n    head!(client, \"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Telegram.html#head!/3"},{"type":"function","title":"Connector.Telegram.options/3","doc":"Perform a OPTIONS request.\n\nSee `request/1` or `request/2` for options definition.\n\n    options(\"/users\")\n    options(\"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\")\n    options(client, \"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Telegram.html#options/3"},{"type":"function","title":"Connector.Telegram.options!/3","doc":"Perform a OPTIONS request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    options!(\"/users\")\n    options!(\"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\")\n    options!(client, \"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Telegram.html#options!/3"},{"type":"function","title":"Connector.Telegram.patch/4","doc":"Perform a PATCH request.\n\nSee `request/1` or `request/2` for options definition.\n\n    patch(\"/users\", %{name: \"Jon\"})\n    patch(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch(client, \"/users\", %{name: \"Jon\"})\n    patch(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Telegram.html#patch/4"},{"type":"function","title":"Connector.Telegram.patch!/4","doc":"Perform a PATCH request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    patch!(\"/users\", %{name: \"Jon\"})\n    patch!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch!(client, \"/users\", %{name: \"Jon\"})\n    patch!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Telegram.html#patch!/4"},{"type":"function","title":"Connector.Telegram.post/4","doc":"Perform a POST request.\n\nSee `request/1` or `request/2` for options definition.\n\n    post(\"/users\", %{name: \"Jon\"})\n    post(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post(client, \"/users\", %{name: \"Jon\"})\n    post(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Telegram.html#post/4"},{"type":"function","title":"Connector.Telegram.post!/4","doc":"Perform a POST request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    post!(\"/users\", %{name: \"Jon\"})\n    post!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post!(client, \"/users\", %{name: \"Jon\"})\n    post!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Telegram.html#post!/4"},{"type":"function","title":"Connector.Telegram.put/4","doc":"Perform a PUT request.\n\nSee `request/1` or `request/2` for options definition.\n\n    put(\"/users\", %{name: \"Jon\"})\n    put(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put(client, \"/users\", %{name: \"Jon\"})\n    put(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Telegram.html#put/4"},{"type":"function","title":"Connector.Telegram.put!/4","doc":"Perform a PUT request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    put!(\"/users\", %{name: \"Jon\"})\n    put!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put!(client, \"/users\", %{name: \"Jon\"})\n    put!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Telegram.html#put!/4"},{"type":"function","title":"Connector.Telegram.request/2","doc":"Perform a request.","ref":"Connector.Telegram.html#request/2"},{"type":"function","title":"Options - Connector.Telegram.request/2","doc":"- `:method` - the request method, one of [`:head`, `:get`, `:delete`, `:trace`, `:options`, `:post`, `:put`, `:patch`]\n- `:url` - either full url e.g. \"http://example.com/some/path\" or just \"/some/path\" if using `Tesla.Middleware.BaseUrl`\n- `:query` - a keyword list of query params, e.g. `[page: 1, per_page: 100]`\n- `:headers` - a keyworld list of headers, e.g. `[{\"content-type\", \"text/plain\"}]`\n- `:body` - depends on used middleware:\n    - by default it can be a binary\n    - if using e.g. JSON encoding middleware it can be a nested map\n    - if adapter supports it it can be a Stream with any of the above\n- `:opts` - custom, per-request middleware or adapter options","ref":"Connector.Telegram.html#request/2-options"},{"type":"function","title":"Examples - Connector.Telegram.request/2","doc":"ExampleApi.request(method: :get, url: \"/users/path\")\n\n    # use shortcut methods\n    ExampleApi.get(\"/users/1\")\n    ExampleApi.post(client, \"/users\", %{name: \"Jon\"})","ref":"Connector.Telegram.html#request/2-examples"},{"type":"function","title":"Connector.Telegram.request!/2","doc":"Perform request and raise in case of error.\n\nThis is similar to `request/2` behaviour from Tesla 0.x\n\nSee `request/2` for list of available options.","ref":"Connector.Telegram.html#request!/2"},{"type":"function","title":"Connector.Telegram.send/1","doc":"Virtual Telegram REST API","ref":"Connector.Telegram.html#send/1"},{"type":"function","title":"Example - Connector.Telegram.send/1","doc":"iex> Connector.Telegram.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"send\"}}\n    iex> Connector.Telegram.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"error\"}}","ref":"Connector.Telegram.html#send/1-example"},{"type":"function","title":"Connector.Telegram.trace/3","doc":"Perform a TRACE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    trace(\"/users\")\n    trace(\"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\")\n    trace(client, \"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Telegram.html#trace/3"},{"type":"function","title":"Connector.Telegram.trace!/3","doc":"Perform a TRACE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    trace!(\"/users\")\n    trace!(\"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\")\n    trace!(client, \"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Telegram.html#trace!/3"},{"type":"type","title":"Connector.Telegram.option/0","doc":"Options that may be passed to a request function. See `request/2` for detailed descriptions.","ref":"Connector.Telegram.html#t:option/0"},{"type":"module","title":"Connector.TelegramHandler","doc":"Telegram external api calls.","ref":"Connector.TelegramHandler.html"},{"type":"function","title":"Connector.TelegramHandler.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Connector.TelegramHandler.html#child_spec/1"},{"type":"function","title":"Connector.TelegramHandler.get_status/1","doc":"","ref":"Connector.TelegramHandler.html#get_status/1"},{"type":"function","title":"Connector.TelegramHandler.handle_continue/2","doc":"","ref":"Connector.TelegramHandler.html#handle_continue/2"},{"type":"function","title":"Connector.TelegramHandler.init/1","doc":"","ref":"Connector.TelegramHandler.html#init/1"},{"type":"function","title":"Connector.TelegramHandler.start_link/1","doc":"","ref":"Connector.TelegramHandler.html#start_link/1"},{"type":"function","title":"Connector.TelegramHandler.stop/1","doc":"","ref":"Connector.TelegramHandler.html#stop/1"},{"type":"module","title":"Connector.Timeout","doc":"API for managing and manipulating configurable timeouts.\n\nSome following features.\n\n* API for retrieving and iterating timeouts.\n* Timeout backoff with optional max.\n* Randomizing within a given percent of a desired range.\n* Timer management utilizing the above configuration.","ref":"Connector.Timeout.html"},{"type":"function","title":"Connector.Timeout.cancel_timer/1","doc":"Cancels the stored timer.\n\nReturns `{%Timeout{}, result}` where result is the value returned by calling\n`Process.cancel_timer/1` on the stored timer reference.","ref":"Connector.Timeout.html#cancel_timer/1"},{"type":"function","title":"Example. - Connector.Timeout.cancel_timer/1","doc":"iex> t = Connector.Timeout.new(100, backoff: 1.25) |> Connector.Timeout.next()\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: 1.25,\n      backoff_round: 1,\n      backoff_max: nil,\n      random: nil,\n      timer: nil\n    }\n\n    iex> Connector.Timeout.cancel_timer(t)\n    {%Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: 1.25,\n      backoff_round: 1,\n      backoff_max: nil,\n      random: nil,\n      timer: nil\n    }, false}\n\n    iex> t = Connector.Timeout.new(100, backoff: 1.25) |> Connector.Timeout.next() |> Connector.Timeout.send_after!(:msg)\n    %Connector.Timeout{\n      base: 100,\n      timeout: 125,\n      backoff: 1.25,\n      backoff_round: 2,\n      backoff_max: nil,\n      random: nil,\n      timer: #Reference \n    }\n\n    iex> Connector.Timeout.cancel_timer(t)\n    {%Connector.Timeout{\n      base: 100,\n      timeout: 125,\n      backoff: 1.25,\n      backoff_round: 2,\n      backoff_max: nil,\n      random: nil,\n      timer: nil\n    }, false}","ref":"Connector.Timeout.html#cancel_timer/1-example"},{"type":"function","title":"Connector.Timeout.cancel_timer!/1","doc":"Calls `cancel_timer/1` but returns only the timeout struct.","ref":"Connector.Timeout.html#cancel_timer!/1"},{"type":"function","title":"Example. - Connector.Timeout.cancel_timer!/1","doc":"iex> t = Connector.Timeout.new(100, backoff: 1.25) |> Connector.Timeout.next() |> Connector.Timeout.send_after!(:msg)\n    %Connector.Timeout{\n      base: 100,\n      timeout: 125,\n      backoff: 1.25,\n      backoff_round: 2,\n      backoff_max: nil,\n      random: nil,\n      timer: #Reference \n    }\n\n    iex> Connector.Timeout.cancel_timer!(t)\n    %Connector.Timeout{\n      base: 100,\n      timeout: 125,\n      backoff: 1.25,\n      backoff_round: 2,\n      backoff_max: nil,\n      random: nil,\n      timer: nil\n    }\n\nReturns `{%Timeout{}, result}` where result is the value returned by calling\n`Process.cancel_timer/1` on the stored timer reference.","ref":"Connector.Timeout.html#cancel_timer!/1-example"},{"type":"function","title":"Connector.Timeout.current/1","doc":"Returns the timeout value represented by the current state.","ref":"Connector.Timeout.html#current/1"},{"type":"function","title":"Example. - Connector.Timeout.current/1","doc":"iex> Connector.Timeout.new(100) |> Connector.Timeout.current()\n    100\n\nIf `backoff` was configured, returns the current timeout with backoff applied:","ref":"Connector.Timeout.html#current/1-example"},{"type":"function","title":"Example. - Connector.Timeout.current/1","doc":"iex> Connector.Timeout.new(100, backoff: 1.25)\n      |> Connector.Timeout.next()\n      |> Connector.Timeout.next()\n      |> Connector.Timeout.current(t)\n    125\n\nIf `random` was configured, the current timeout out is randomized within the\nconfigured range:","ref":"Connector.Timeout.html#current/1-example"},{"type":"function","title":"Example. - Connector.Timeout.current/1","doc":"iex> t = Connector.Timeout.new(100, random: 0.10)\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: nil,\n      backoff_round: 0,\n      backoff_max: nil,\n      random: {1.1, 0.9},\n      timer: nil\n    }\n\n    iex> if Connector.Timeout.current(t) in 91..110, do: true, else: false\n    true","ref":"Connector.Timeout.html#current/1-example"},{"type":"function","title":"Connector.Timeout.new/2","doc":"Builds a `Timeout` struct.\n\nAccepts an integer timeout value and the following optional configuration:\n\n* `:backoff` - A backoff growth factor for growing a timeout period over time.\n* `:backoff_max` - Given `:backoff`, will never grow past max.\n* `:random` - A float indicating the `%` timeout values will be randomized\n  within. Expects `0 < :random < 1` or raises an `ArgumentError`. For example,\n  use `0.10` to randomize within +/- 10% of the desired timeout.","ref":"Connector.Timeout.html#new/2"},{"type":"function","title":"Example. - Connector.Timeout.new/2","doc":"iex> Connector.Timeout.new(100, backoff: 1.25, backoff_max: 1_250, random: 0.10)\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: 1.25,\n      backoff_round: 0,\n      backoff_max: 1250,\n      random: {1.1, 0.9},\n      timer: nil\n    }","ref":"Connector.Timeout.html#new/2-example"},{"type":"function","title":"Connector.Timeout.next/1","doc":"Increments the current timeout based on the `backoff` configuration.\n\nIf there is no `backoff` configured, this function simply returns the timeout\nas is. If `backoff_max` is configured, the timeout will never be incremented\nabove that value.\n\nThe first call to `next/1` will always return the initial timeout first.","ref":"Connector.Timeout.html#next/1"},{"type":"function","title":"Example. - Connector.Timeout.next/1","doc":"iex> now = Connector.Timeout.new(100)\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: nil,\n      backoff_round: 0,\n      backoff_max: nil,\n      random: nil,\n      timer: nil\n    }\n\n    iex> now |> Connector.Timeout.next()\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: nil,\n      backoff_round: 0,\n      backoff_max: nil,\n      random: nil,\n      timer: nil\n    }\n\n    iex> now = Connector.Timeout.new(100, backoff: 1.25)\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: 1.25,\n      backoff_round: 0,\n      backoff_max: nil,\n      random: nil,\n      timer: nil\n    }\n\n    iex> now |> Connector.Timeout.next()\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: 1.25,\n      backoff_round: 1,\n      backoff_max: nil,\n      random: nil,\n      timer: nil\n    }\n\n    iex> now |> Connector.Timeout.next() |> Connector.Timeout.next()\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: 1.25,\n      backoff_round: 1,\n      backoff_max: nil,\n      random: nil,\n      timer: nil\n    }\n\n    iex> now = Connector.Timeout.new(100, backoff: 1.25, backoff_max: 2)\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: 1.25,\n      backoff_round: 0,\n      backoff_max: 2,\n      random: nil,\n      timer: nil\n    }\n\n    iex> now |> Connector.Timeout.new()\n    %Connector.Timeout{\n      base: 100,\n      timeout: 2,\n      backoff: 1.25,\n      backoff_round: 1,\n      backoff_max: 2,\n      random: nil,\n      timer: nil\n    }\n\n    iex> now |> Connector.Timeout.next() |> Connector.Timeout.next() |> Connector.Timeout.next()\n    %Connector.Timeout{\n      base: 100,\n      timeout: 2,\n      backoff: 1.25,\n      backoff_round: 1,\n      backoff_max: 2,\n      random: nil,\n      timer: nil\n    }","ref":"Connector.Timeout.html#next/1-example"},{"type":"function","title":"Connector.Timeout.reset/1","doc":"Resets the current timeout.","ref":"Connector.Timeout.html#reset/1"},{"type":"function","title":"Example. - Connector.Timeout.reset/1","doc":"iex> now = Connector.Timeout.new(100, backoff: 1.25, backoff_max: 1_250, random: 0.10)\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: 1.25,\n      backoff_round: 0,\n      backoff_max: 1250,\n      random: {1.1, 0.9},\n      timer: nil\n    }\n\n    iex> Connector.Timeout.reset(now)\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: 1.25,\n      backoff_round: 0,\n      backoff_max: 1250,\n      random: {1.1, 0.9},\n      timer: nil\n    }","ref":"Connector.Timeout.html#reset/1-example"},{"type":"function","title":"Connector.Timeout.send_after/3","doc":"Sends a process a message with `Process.send_after/3` using the given timeout,\nthe stores the resulting timer on the struct.\n\nSends the message to `self()` if pid is omitted, otherwise sends to the given\n`pid`.\n\nAlways calls `next/1` first on the given timer, then uses the return value of\n`current/1` to delay the message.\n\nThis function is a convienence wrapper around the following workflow:","ref":"Connector.Timeout.html#send_after/3"},{"type":"function","title":"Example. - Connector.Timeout.send_after/3","doc":"iex> t = Connector.Timeout.new(100, backoff: 1.25) |> Connector.Timeout.next()\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: 1.25,\n      backoff_round: 1,\n      backoff_max: nil,\n      random: nil,\n      timer: nil\n    }\n\n    iex> timer = Process.send_after(self(), :message, Connector.Timeout.current(t))\n    #Reference \n\n    iex> t = %{t | timer: timer}\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: 1.25,\n      backoff_round: 1,\n      backoff_max: nil,\n      random: nil,\n      timer: #Reference \n    }\n\n    iex> Connector.Timeout.send_after(t, self(), :message)\n    {%Connector.Timeout{\n        base: 100,\n        timeout: 125,\n        backoff: 1.25,\n        backoff_round: 2,\n        backoff_max: nil,\n        random: nil,\n        timer: #Reference \n    }, 125}\n\nReturns `{%Timeout{}, delay}` where delay is the message schedule delay.","ref":"Connector.Timeout.html#send_after/3-example"},{"type":"function","title":"Connector.Timeout.send_after!/3","doc":"Calls `send_after!/3`, but returns only the timeout struct.","ref":"Connector.Timeout.html#send_after!/3"},{"type":"function","title":"Example. - Connector.Timeout.send_after!/3","doc":"iex> t = Connector.Timeout.new(100, backoff: 1.25) |> Connector.Timeout.next()\n    %Connector.Timeout{\n      base: 100,\n      timeout: 100,\n      backoff: 1.25,\n      backoff_round: 1,\n      backoff_max: nil,\n      random: nil,\n      timer: nil\n    }\n\n    iex> Connector.Timeout.send_after!(t, self(), :message)\n    %Connector.Timeout{\n      base: 100,\n      timeout: 125,\n      backoff: 1.25,\n      backoff_round: 2,\n      backoff_max: nil,\n      random: nil,\n      timer: #Reference \n    }","ref":"Connector.Timeout.html#send_after!/3-example"},{"type":"type","title":"Connector.Timeout.backoff/0","doc":"","ref":"Connector.Timeout.html#t:backoff/0"},{"type":"type","title":"Connector.Timeout.backoff_max/0","doc":"","ref":"Connector.Timeout.html#t:backoff_max/0"},{"type":"type","title":"Connector.Timeout.options/0","doc":"","ref":"Connector.Timeout.html#t:options/0"},{"type":"type","title":"Connector.Timeout.random/0","doc":"","ref":"Connector.Timeout.html#t:random/0"},{"type":"type","title":"Connector.Timeout.t/0","doc":"","ref":"Connector.Timeout.html#t:t/0"},{"type":"type","title":"Connector.Timeout.timeout_value/0","doc":"","ref":"Connector.Timeout.html#t:timeout_value/0"},{"type":"module","title":"Connector.Utils","doc":"Some function for Connector.","ref":"Connector.Utils.html"},{"type":"function","title":"Connector.Utils.random_state/0","doc":"","ref":"Connector.Utils.html#random_state/0"},{"type":"function","title":"Connector.Utils.random_timer/1","doc":"","ref":"Connector.Utils.html#random_timer/1"},{"type":"function","title":"Connector.Utils.transfer/1","doc":"","ref":"Connector.Utils.html#transfer/1"},{"type":"function","title":"Connector.Utils.while/2","doc":"","ref":"Connector.Utils.html#while/2"},{"type":"function","title":"Example. - Connector.Utils.while/2","doc":"iex> Connector.Utils.while(fn -> 1 end, 3_000)\n    :timeout\n    iex> Connector.Utils.while(fn -> 1 end, 0)\n    :timeout","ref":"Connector.Utils.html#while/2-example"},{"type":"module","title":"Connector.Viber","doc":"Viber REST API wrapper in Elixir","ref":"Connector.Viber.html"},{"type":"function","title":"Connector.Viber.delete/3","doc":"Perform a DELETE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    delete(\"/users\")\n    delete(\"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\")\n    delete(client, \"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Viber.html#delete/3"},{"type":"function","title":"Connector.Viber.delete!/3","doc":"Perform a DELETE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    delete!(\"/users\")\n    delete!(\"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\")\n    delete!(client, \"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Viber.html#delete!/3"},{"type":"function","title":"Connector.Viber.get/3","doc":"Perform a GET request.\n\nSee `request/1` or `request/2` for options definition.\n\n    get(\"/users\")\n    get(\"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\")\n    get(client, \"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Viber.html#get/3"},{"type":"function","title":"Connector.Viber.get!/3","doc":"Perform a GET request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    get!(\"/users\")\n    get!(\"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\")\n    get!(client, \"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Viber.html#get!/3"},{"type":"function","title":"Connector.Viber.head/3","doc":"Perform a HEAD request.\n\nSee `request/1` or `request/2` for options definition.\n\n    head(\"/users\")\n    head(\"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\")\n    head(client, \"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Viber.html#head/3"},{"type":"function","title":"Connector.Viber.head!/3","doc":"Perform a HEAD request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    head!(\"/users\")\n    head!(\"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\")\n    head!(client, \"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Viber.html#head!/3"},{"type":"function","title":"Connector.Viber.options/3","doc":"Perform a OPTIONS request.\n\nSee `request/1` or `request/2` for options definition.\n\n    options(\"/users\")\n    options(\"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\")\n    options(client, \"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Viber.html#options/3"},{"type":"function","title":"Connector.Viber.options!/3","doc":"Perform a OPTIONS request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    options!(\"/users\")\n    options!(\"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\")\n    options!(client, \"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Viber.html#options!/3"},{"type":"function","title":"Connector.Viber.patch/4","doc":"Perform a PATCH request.\n\nSee `request/1` or `request/2` for options definition.\n\n    patch(\"/users\", %{name: \"Jon\"})\n    patch(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch(client, \"/users\", %{name: \"Jon\"})\n    patch(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Viber.html#patch/4"},{"type":"function","title":"Connector.Viber.patch!/4","doc":"Perform a PATCH request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    patch!(\"/users\", %{name: \"Jon\"})\n    patch!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch!(client, \"/users\", %{name: \"Jon\"})\n    patch!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Viber.html#patch!/4"},{"type":"function","title":"Connector.Viber.post/4","doc":"Perform a POST request.\n\nSee `request/1` or `request/2` for options definition.\n\n    post(\"/users\", %{name: \"Jon\"})\n    post(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post(client, \"/users\", %{name: \"Jon\"})\n    post(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Viber.html#post/4"},{"type":"function","title":"Connector.Viber.post!/4","doc":"Perform a POST request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    post!(\"/users\", %{name: \"Jon\"})\n    post!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post!(client, \"/users\", %{name: \"Jon\"})\n    post!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Viber.html#post!/4"},{"type":"function","title":"Connector.Viber.put/4","doc":"Perform a PUT request.\n\nSee `request/1` or `request/2` for options definition.\n\n    put(\"/users\", %{name: \"Jon\"})\n    put(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put(client, \"/users\", %{name: \"Jon\"})\n    put(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Viber.html#put/4"},{"type":"function","title":"Connector.Viber.put!/4","doc":"Perform a PUT request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    put!(\"/users\", %{name: \"Jon\"})\n    put!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put!(client, \"/users\", %{name: \"Jon\"})\n    put!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Viber.html#put!/4"},{"type":"function","title":"Connector.Viber.request/2","doc":"Perform a request.","ref":"Connector.Viber.html#request/2"},{"type":"function","title":"Options - Connector.Viber.request/2","doc":"- `:method` - the request method, one of [`:head`, `:get`, `:delete`, `:trace`, `:options`, `:post`, `:put`, `:patch`]\n- `:url` - either full url e.g. \"http://example.com/some/path\" or just \"/some/path\" if using `Tesla.Middleware.BaseUrl`\n- `:query` - a keyword list of query params, e.g. `[page: 1, per_page: 100]`\n- `:headers` - a keyworld list of headers, e.g. `[{\"content-type\", \"text/plain\"}]`\n- `:body` - depends on used middleware:\n    - by default it can be a binary\n    - if using e.g. JSON encoding middleware it can be a nested map\n    - if adapter supports it it can be a Stream with any of the above\n- `:opts` - custom, per-request middleware or adapter options","ref":"Connector.Viber.html#request/2-options"},{"type":"function","title":"Examples - Connector.Viber.request/2","doc":"ExampleApi.request(method: :get, url: \"/users/path\")\n\n    # use shortcut methods\n    ExampleApi.get(\"/users/1\")\n    ExampleApi.post(client, \"/users\", %{name: \"Jon\"})","ref":"Connector.Viber.html#request/2-examples"},{"type":"function","title":"Connector.Viber.request!/2","doc":"Perform request and raise in case of error.\n\nThis is similar to `request/2` behaviour from Tesla 0.x\n\nSee `request/2` for list of available options.","ref":"Connector.Viber.html#request!/2"},{"type":"function","title":"Connector.Viber.send/1","doc":"Virtual Viber REST API","ref":"Connector.Viber.html#send/1"},{"type":"function","title":"Example - Connector.Viber.send/1","doc":"iex> Connector.Viber.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"send\"}}\n    iex> Connector.Viber.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"error\"}}","ref":"Connector.Viber.html#send/1-example"},{"type":"function","title":"Connector.Viber.trace/3","doc":"Perform a TRACE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    trace(\"/users\")\n    trace(\"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\")\n    trace(client, \"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Viber.html#trace/3"},{"type":"function","title":"Connector.Viber.trace!/3","doc":"Perform a TRACE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    trace!(\"/users\")\n    trace!(\"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\")\n    trace!(client, \"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Viber.html#trace!/3"},{"type":"type","title":"Connector.Viber.option/0","doc":"Options that may be passed to a request function. See `request/2` for detailed descriptions.","ref":"Connector.Viber.html#t:option/0"},{"type":"module","title":"Connector.ViberHandler","doc":"Viber external api calls.","ref":"Connector.ViberHandler.html"},{"type":"function","title":"Connector.ViberHandler.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Connector.ViberHandler.html#child_spec/1"},{"type":"function","title":"Connector.ViberHandler.get_status/1","doc":"","ref":"Connector.ViberHandler.html#get_status/1"},{"type":"function","title":"Connector.ViberHandler.handle_continue/2","doc":"","ref":"Connector.ViberHandler.html#handle_continue/2"},{"type":"function","title":"Connector.ViberHandler.init/1","doc":"","ref":"Connector.ViberHandler.html#init/1"},{"type":"function","title":"Connector.ViberHandler.start_link/1","doc":"","ref":"Connector.ViberHandler.html#start_link/1"},{"type":"function","title":"Connector.ViberHandler.stop/1","doc":"","ref":"Connector.ViberHandler.html#stop/1"},{"type":"module","title":"Connector.Vodafone","doc":"Vodafone REST API wrapper in Elixir","ref":"Connector.Vodafone.html"},{"type":"function","title":"Connector.Vodafone.delete/3","doc":"Perform a DELETE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    delete(\"/users\")\n    delete(\"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\")\n    delete(client, \"/users\", query: [scope: \"admin\"])\n    delete(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Vodafone.html#delete/3"},{"type":"function","title":"Connector.Vodafone.delete!/3","doc":"Perform a DELETE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    delete!(\"/users\")\n    delete!(\"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\")\n    delete!(client, \"/users\", query: [scope: \"admin\"])\n    delete!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Vodafone.html#delete!/3"},{"type":"function","title":"Connector.Vodafone.get/3","doc":"Perform a GET request.\n\nSee `request/1` or `request/2` for options definition.\n\n    get(\"/users\")\n    get(\"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\")\n    get(client, \"/users\", query: [scope: \"admin\"])\n    get(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Vodafone.html#get/3"},{"type":"function","title":"Connector.Vodafone.get!/3","doc":"Perform a GET request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    get!(\"/users\")\n    get!(\"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\")\n    get!(client, \"/users\", query: [scope: \"admin\"])\n    get!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Vodafone.html#get!/3"},{"type":"function","title":"Connector.Vodafone.head/3","doc":"Perform a HEAD request.\n\nSee `request/1` or `request/2` for options definition.\n\n    head(\"/users\")\n    head(\"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\")\n    head(client, \"/users\", query: [scope: \"admin\"])\n    head(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Vodafone.html#head/3"},{"type":"function","title":"Connector.Vodafone.head!/3","doc":"Perform a HEAD request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    head!(\"/users\")\n    head!(\"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\")\n    head!(client, \"/users\", query: [scope: \"admin\"])\n    head!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Vodafone.html#head!/3"},{"type":"function","title":"Connector.Vodafone.options/3","doc":"Perform a OPTIONS request.\n\nSee `request/1` or `request/2` for options definition.\n\n    options(\"/users\")\n    options(\"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\")\n    options(client, \"/users\", query: [scope: \"admin\"])\n    options(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Vodafone.html#options/3"},{"type":"function","title":"Connector.Vodafone.options!/3","doc":"Perform a OPTIONS request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    options!(\"/users\")\n    options!(\"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\")\n    options!(client, \"/users\", query: [scope: \"admin\"])\n    options!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Vodafone.html#options!/3"},{"type":"function","title":"Connector.Vodafone.patch/4","doc":"Perform a PATCH request.\n\nSee `request/1` or `request/2` for options definition.\n\n    patch(\"/users\", %{name: \"Jon\"})\n    patch(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch(client, \"/users\", %{name: \"Jon\"})\n    patch(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Vodafone.html#patch/4"},{"type":"function","title":"Connector.Vodafone.patch!/4","doc":"Perform a PATCH request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    patch!(\"/users\", %{name: \"Jon\"})\n    patch!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    patch!(client, \"/users\", %{name: \"Jon\"})\n    patch!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Vodafone.html#patch!/4"},{"type":"function","title":"Connector.Vodafone.post/4","doc":"Perform a POST request.\n\nSee `request/1` or `request/2` for options definition.\n\n    post(\"/users\", %{name: \"Jon\"})\n    post(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post(client, \"/users\", %{name: \"Jon\"})\n    post(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Vodafone.html#post/4"},{"type":"function","title":"Connector.Vodafone.post!/4","doc":"Perform a POST request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    post!(\"/users\", %{name: \"Jon\"})\n    post!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    post!(client, \"/users\", %{name: \"Jon\"})\n    post!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Vodafone.html#post!/4"},{"type":"function","title":"Connector.Vodafone.put/4","doc":"Perform a PUT request.\n\nSee `request/1` or `request/2` for options definition.\n\n    put(\"/users\", %{name: \"Jon\"})\n    put(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put(client, \"/users\", %{name: \"Jon\"})\n    put(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Vodafone.html#put/4"},{"type":"function","title":"Connector.Vodafone.put!/4","doc":"Perform a PUT request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    put!(\"/users\", %{name: \"Jon\"})\n    put!(\"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])\n    put!(client, \"/users\", %{name: \"Jon\"})\n    put!(client, \"/users\", %{name: \"Jon\"}, query: [scope: \"admin\"])","ref":"Connector.Vodafone.html#put!/4"},{"type":"function","title":"Connector.Vodafone.request/2","doc":"Perform a request.","ref":"Connector.Vodafone.html#request/2"},{"type":"function","title":"Options - Connector.Vodafone.request/2","doc":"- `:method` - the request method, one of [`:head`, `:get`, `:delete`, `:trace`, `:options`, `:post`, `:put`, `:patch`]\n- `:url` - either full url e.g. \"http://example.com/some/path\" or just \"/some/path\" if using `Tesla.Middleware.BaseUrl`\n- `:query` - a keyword list of query params, e.g. `[page: 1, per_page: 100]`\n- `:headers` - a keyworld list of headers, e.g. `[{\"content-type\", \"text/plain\"}]`\n- `:body` - depends on used middleware:\n    - by default it can be a binary\n    - if using e.g. JSON encoding middleware it can be a nested map\n    - if adapter supports it it can be a Stream with any of the above\n- `:opts` - custom, per-request middleware or adapter options","ref":"Connector.Vodafone.html#request/2-options"},{"type":"function","title":"Examples - Connector.Vodafone.request/2","doc":"ExampleApi.request(method: :get, url: \"/users/path\")\n\n    # use shortcut methods\n    ExampleApi.get(\"/users/1\")\n    ExampleApi.post(client, \"/users\", %{name: \"Jon\"})","ref":"Connector.Vodafone.html#request/2-examples"},{"type":"function","title":"Connector.Vodafone.request!/2","doc":"Perform request and raise in case of error.\n\nThis is similar to `request/2` behaviour from Tesla 0.x\n\nSee `request/2` for list of available options.","ref":"Connector.Vodafone.html#request!/2"},{"type":"function","title":"Connector.Vodafone.send/1","doc":"Virtual Vodafone REST API","ref":"Connector.Vodafone.html#send/1"},{"type":"function","title":"Example - Connector.Vodafone.send/1","doc":"iex> Connector.Vodafone.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"send\"}}\n    iex> Connector.Vodafone.send(%{phone_number: \"+380991111111\", message_body: \"Hello World!\"})\n    {:ok, %{\"status\" => \"error\"}}","ref":"Connector.Vodafone.html#send/1-example"},{"type":"function","title":"Connector.Vodafone.trace/3","doc":"Perform a TRACE request.\n\nSee `request/1` or `request/2` for options definition.\n\n    trace(\"/users\")\n    trace(\"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\")\n    trace(client, \"/users\", query: [scope: \"admin\"])\n    trace(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Vodafone.html#trace/3"},{"type":"function","title":"Connector.Vodafone.trace!/3","doc":"Perform a TRACE request.\n\nSee `request!/1` or `request!/2` for options definition.\n\n    trace!(\"/users\")\n    trace!(\"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\")\n    trace!(client, \"/users\", query: [scope: \"admin\"])\n    trace!(client, \"/users\", body: %{name: \"Jon\"})","ref":"Connector.Vodafone.html#trace!/3"},{"type":"type","title":"Connector.Vodafone.option/0","doc":"Options that may be passed to a request function. See `request/2` for detailed descriptions.","ref":"Connector.Vodafone.html#t:option/0"},{"type":"module","title":"Connector.VodafoneHandler","doc":"Vodafone external api calls.","ref":"Connector.VodafoneHandler.html"},{"type":"function","title":"Connector.VodafoneHandler.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Connector.VodafoneHandler.html#child_spec/1"},{"type":"function","title":"Connector.VodafoneHandler.get_status/1","doc":"","ref":"Connector.VodafoneHandler.html#get_status/1"},{"type":"function","title":"Connector.VodafoneHandler.handle_continue/2","doc":"","ref":"Connector.VodafoneHandler.html#handle_continue/2"},{"type":"function","title":"Connector.VodafoneHandler.init/1","doc":"","ref":"Connector.VodafoneHandler.html#init/1"},{"type":"function","title":"Connector.VodafoneHandler.start_link/1","doc":"","ref":"Connector.VodafoneHandler.html#start_link/1"},{"type":"function","title":"Connector.VodafoneHandler.stop/1","doc":"","ref":"Connector.VodafoneHandler.html#stop/1"},{"type":"module","title":"Core","doc":"Documentation for `Core`.","ref":"Core.html"},{"type":"module","title":"Core.Config","doc":"Configuration wrapper.","ref":"Core.Config.html"},{"type":"function","title":"Core.Config.delete/1","doc":"","ref":"Core.Config.html#delete/1"},{"type":"function","title":"Core.Config.get/1","doc":"","ref":"Core.Config.html#get/1"},{"type":"function","title":"Core.Config.get/2","doc":"","ref":"Core.Config.html#get/2"},{"type":"function","title":"Core.Config.get!/1","doc":"","ref":"Core.Config.html#get!/1"},{"type":"function","title":"Core.Config.put/2","doc":"","ref":"Core.Config.html#put/2"},{"type":"module","title":"Core.Context","doc":"Extention Ecto.* for context","ref":"Core.Context.html"},{"type":"module","title":"Core.Logs","doc":"The Log context.","ref":"Core.Logs.html"},{"type":"function","title":"Core.Logs.create_sms_log/1","doc":"Creates SmsLog.","ref":"Core.Logs.html#create_sms_log/1"},{"type":"function","title":"Examples - Core.Logs.create_sms_log/1","doc":"iex> create_sms_log(%{field: value})\n    {:ok, %SmsLog{}}\n\n    iex> create_sms_log(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Core.Logs.html#create_sms_log/1-examples"},{"type":"function","title":"Core.Logs.get_sms_log/1","doc":"Gets a single SmsLog.\n\nRaises `Ecto.NoResultsError` if SmsLog does not exist.","ref":"Core.Logs.html#get_sms_log/1"},{"type":"function","title":"Examples - Core.Logs.get_sms_log/1","doc":"iex> get_sms_log(123)\n    %SmsLog{}\n\n    iex> get_sms_log(456)\n    {:error, %Ecto.Changeset{}}","ref":"Core.Logs.html#get_sms_log/1-examples"},{"type":"type","title":"Core.Logs.error_tuple/0","doc":"","ref":"Core.Logs.html#t:error_tuple/0"},{"type":"type","title":"Core.Logs.reason/0","doc":"","ref":"Core.Logs.html#t:reason/0"},{"type":"type","title":"Core.Logs.result/0","doc":"","ref":"Core.Logs.html#t:result/0"},{"type":"type","title":"Core.Logs.success_tuple/0","doc":"","ref":"Core.Logs.html#t:success_tuple/0"},{"type":"type","title":"Core.Logs.t/0","doc":"","ref":"Core.Logs.html#t:t/0"},{"type":"module","title":"Core.Logs.SmsLog","doc":"Schema for SmsLog.","ref":"Core.Logs.SmsLog.html"},{"type":"function","title":"Core.Logs.SmsLog.changeset/1","doc":"","ref":"Core.Logs.SmsLog.html#changeset/1"},{"type":"function","title":"Core.Logs.SmsLog.changeset/2","doc":"Create changeset for SmsLog.","ref":"Core.Logs.SmsLog.html#changeset/2"},{"type":"function","title":"Core.Logs.SmsLog.changeset_preload/2","doc":"","ref":"Core.Logs.SmsLog.html#changeset_preload/2"},{"type":"function","title":"Core.Logs.SmsLog.create/1","doc":"","ref":"Core.Logs.SmsLog.html#create/1"},{"type":"function","title":"Core.Logs.SmsLog.find/1","doc":"","ref":"Core.Logs.SmsLog.html#find/1"},{"type":"function","title":"Core.Logs.SmsLog.find_by/1","doc":"","ref":"Core.Logs.SmsLog.html#find_by/1"},{"type":"function","title":"Core.Logs.SmsLog.put_assoc_nochange/3","doc":"","ref":"Core.Logs.SmsLog.html#put_assoc_nochange/3"},{"type":"type","title":"Core.Logs.SmsLog.t/0","doc":"","ref":"Core.Logs.SmsLog.html#t:t/0"},{"type":"module","title":"Core.Model","doc":"Extention Ecto.* for schemas","ref":"Core.Model.html"},{"type":"module","title":"Core.Monitoring","doc":"The Monitoring context.","ref":"Core.Monitoring.html"},{"type":"function","title":"Core.Monitoring.create_status/1","doc":"Creates Status.","ref":"Core.Monitoring.html#create_status/1"},{"type":"function","title":"Examples - Core.Monitoring.create_status/1","doc":"iex> create_status(%{field: value})\n    {:ok, %Status{}}\n\n    iex> create_status(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Core.Monitoring.html#create_status/1-examples"},{"type":"function","title":"Core.Monitoring.get_status/1","doc":"Gets a single Status.\n\nRaises `Ecto.NoResultsError` if Status does not exist.","ref":"Core.Monitoring.html#get_status/1"},{"type":"function","title":"Examples - Core.Monitoring.get_status/1","doc":"iex> get_status(123)\n    %Status{}\n\n    iex> get_status(456)\n    {:error, %Ecto.Changeset{}}","ref":"Core.Monitoring.html#get_status/1-examples"},{"type":"function","title":"Core.Monitoring.list_status/0","doc":"Returns the list of Statuses.","ref":"Core.Monitoring.html#list_status/0"},{"type":"type","title":"Core.Monitoring.error_tuple/0","doc":"","ref":"Core.Monitoring.html#t:error_tuple/0"},{"type":"type","title":"Core.Monitoring.reason/0","doc":"","ref":"Core.Monitoring.html#t:reason/0"},{"type":"type","title":"Core.Monitoring.result/0","doc":"","ref":"Core.Monitoring.html#t:result/0"},{"type":"type","title":"Core.Monitoring.success_tuple/0","doc":"","ref":"Core.Monitoring.html#t:success_tuple/0"},{"type":"type","title":"Core.Monitoring.t/0","doc":"","ref":"Core.Monitoring.html#t:t/0"},{"type":"module","title":"Core.Monitoring.Status","doc":"Schema for Status.","ref":"Core.Monitoring.Status.html"},{"type":"function","title":"Core.Monitoring.Status.changeset/1","doc":"","ref":"Core.Monitoring.Status.html#changeset/1"},{"type":"function","title":"Core.Monitoring.Status.changeset/2","doc":"Create changeset for Status.","ref":"Core.Monitoring.Status.html#changeset/2"},{"type":"function","title":"Core.Monitoring.Status.create/1","doc":"","ref":"Core.Monitoring.Status.html#create/1"},{"type":"function","title":"Core.Monitoring.Status.find/1","doc":"","ref":"Core.Monitoring.Status.html#find/1"},{"type":"function","title":"Core.Monitoring.Status.find_by/1","doc":"","ref":"Core.Monitoring.Status.html#find_by/1"},{"type":"type","title":"Core.Monitoring.Status.t/0","doc":"","ref":"Core.Monitoring.Status.html#t:t/0"},{"type":"module","title":"Core.Operators","doc":"The Operators context.","ref":"Core.Operators.html"},{"type":"function","title":"Core.Operators.create_operator/1","doc":"Creates an Operator.","ref":"Core.Operators.html#create_operator/1"},{"type":"function","title":"Examples - Core.Operators.create_operator/1","doc":"iex> create_operator(%{field: value})\n    {:ok, %Operator{}}\n\n    iex> create_operator(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Core.Operators.html#create_operator/1-examples"},{"type":"function","title":"Core.Operators.create_operator_type/1","doc":"Creates an OperatorType.","ref":"Core.Operators.html#create_operator_type/1"},{"type":"function","title":"Examples - Core.Operators.create_operator_type/1","doc":"iex> create_operator_type(%{field: value})\n    {:ok, %OperatorType{}}\n\n    iex> create_operator_type(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Core.Operators.html#create_operator_type/1-examples"},{"type":"function","title":"Core.Operators.get_operator/1","doc":"Gets a single an Operator.\n\nRaises `Ecto.NoResultsError` if Operator does not exist.","ref":"Core.Operators.html#get_operator/1"},{"type":"function","title":"Examples - Core.Operators.get_operator/1","doc":"iex> get_operator(123)\n    %Operator{}\n\n    iex> get_operator(456)\n    {:error, %Ecto.Changeset{}}","ref":"Core.Operators.html#get_operator/1-examples"},{"type":"function","title":"Core.Operators.get_operator_type/1","doc":"Gets a single an OperatorType.\n\nRaises `Ecto.NoResultsError` if OperatorType does not exist.","ref":"Core.Operators.html#get_operator_type/1"},{"type":"function","title":"Examples - Core.Operators.get_operator_type/1","doc":"iex> get_operator_type(123)\n    %OperatorType{}\n\n    iex> get_operator_type(456)\n    {:error, %Ecto.Changeset{}}","ref":"Core.Operators.html#get_operator_type/1-examples"},{"type":"function","title":"Core.Operators.list_operator/0","doc":"Returns the list of Operator.","ref":"Core.Operators.html#list_operator/0"},{"type":"function","title":"Core.Operators.list_operator_type/0","doc":"Returns the list of OperatorType.","ref":"Core.Operators.html#list_operator_type/0"},{"type":"function","title":"Core.Operators.update_operator/2","doc":"Updates an Operator.","ref":"Core.Operators.html#update_operator/2"},{"type":"function","title":"Examples - Core.Operators.update_operator/2","doc":"iex> update_operator(struct, %{field: new_value})\n    {:ok, %Operator{}}\n\n    iex> update_operator(struct, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Core.Operators.html#update_operator/2-examples"},{"type":"function","title":"Core.Operators.update_operator_type/2","doc":"Updates an OperatorType.","ref":"Core.Operators.html#update_operator_type/2"},{"type":"function","title":"Examples - Core.Operators.update_operator_type/2","doc":"iex> update_operator_type(struct, %{field: new_value})\n    {:ok, %OperatorType{}}\n\n    iex> update_operator_type(struct, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Core.Operators.html#update_operator_type/2-examples"},{"type":"type","title":"Core.Operators.error_tuple/0","doc":"","ref":"Core.Operators.html#t:error_tuple/0"},{"type":"type","title":"Core.Operators.reason/0","doc":"","ref":"Core.Operators.html#t:reason/0"},{"type":"type","title":"Core.Operators.result/0","doc":"","ref":"Core.Operators.html#t:result/0"},{"type":"type","title":"Core.Operators.success_tuple/0","doc":"","ref":"Core.Operators.html#t:success_tuple/0"},{"type":"type","title":"Core.Operators.t/0","doc":"","ref":"Core.Operators.html#t:t/0"},{"type":"module","title":"Core.Operators.Config","doc":"Represents the config entity for operators.","ref":"Core.Operators.Config.html"},{"type":"function","title":"Core.Operators.Config.changeset/1","doc":"","ref":"Core.Operators.Config.html#changeset/1"},{"type":"function","title":"Core.Operators.Config.changeset/2","doc":"Create changeset for Config.","ref":"Core.Operators.Config.html#changeset/2"},{"type":"function","title":"Core.Operators.Config.create/1","doc":"","ref":"Core.Operators.Config.html#create/1"},{"type":"function","title":"Core.Operators.Config.find/1","doc":"","ref":"Core.Operators.Config.html#find/1"},{"type":"function","title":"Core.Operators.Config.find_by/1","doc":"","ref":"Core.Operators.Config.html#find_by/1"},{"type":"type","title":"Core.Operators.Config.t/0","doc":"","ref":"Core.Operators.Config.html#t:t/0"},{"type":"module","title":"Core.Operators.Operator","doc":"Schema for Operator.","ref":"Core.Operators.Operator.html"},{"type":"function","title":"Core.Operators.Operator.changeset/1","doc":"","ref":"Core.Operators.Operator.html#changeset/1"},{"type":"function","title":"Core.Operators.Operator.changeset/2","doc":"Create changeset for Operator.","ref":"Core.Operators.Operator.html#changeset/2"},{"type":"function","title":"Core.Operators.Operator.create/1","doc":"","ref":"Core.Operators.Operator.html#create/1"},{"type":"function","title":"Core.Operators.Operator.find/1","doc":"","ref":"Core.Operators.Operator.html#find/1"},{"type":"function","title":"Core.Operators.Operator.find_by/1","doc":"","ref":"Core.Operators.Operator.html#find_by/1"},{"type":"function","title":"Core.Operators.Operator.validate_decimal/2","doc":"","ref":"Core.Operators.Operator.html#validate_decimal/2"},{"type":"type","title":"Core.Operators.Operator.t/0","doc":"","ref":"Core.Operators.Operator.html#t:t/0"},{"type":"module","title":"Core.Operators.OperatorType","doc":"Schema for OperatorType.","ref":"Core.Operators.OperatorType.html"},{"type":"function","title":"Core.Operators.OperatorType.changeset/1","doc":"","ref":"Core.Operators.OperatorType.html#changeset/1"},{"type":"function","title":"Core.Operators.OperatorType.changeset/2","doc":"Create changeset for OperatorType.","ref":"Core.Operators.OperatorType.html#changeset/2"},{"type":"function","title":"Core.Operators.OperatorType.create/1","doc":"","ref":"Core.Operators.OperatorType.html#create/1"},{"type":"function","title":"Core.Operators.OperatorType.find/1","doc":"","ref":"Core.Operators.OperatorType.html#find/1"},{"type":"function","title":"Core.Operators.OperatorType.find_by/1","doc":"","ref":"Core.Operators.OperatorType.html#find_by/1"},{"type":"type","title":"Core.Operators.OperatorType.t/0","doc":"","ref":"Core.Operators.OperatorType.html#t:t/0"},{"type":"module","title":"Core.Operators.Parameters","doc":"Represents the parameters entity for config.","ref":"Core.Operators.Parameters.html"},{"type":"function","title":"Core.Operators.Parameters.changeset/1","doc":"","ref":"Core.Operators.Parameters.html#changeset/1"},{"type":"function","title":"Core.Operators.Parameters.changeset/2","doc":"Create changeset for Parameters.","ref":"Core.Operators.Parameters.html#changeset/2"},{"type":"function","title":"Core.Operators.Parameters.create/1","doc":"","ref":"Core.Operators.Parameters.html#create/1"},{"type":"function","title":"Core.Operators.Parameters.find/1","doc":"","ref":"Core.Operators.Parameters.html#find/1"},{"type":"function","title":"Core.Operators.Parameters.find_by/1","doc":"","ref":"Core.Operators.Parameters.html#find_by/1"},{"type":"type","title":"Core.Operators.Parameters.t/0","doc":"","ref":"Core.Operators.Parameters.html#t:t/0"},{"type":"module","title":"Core.Queries","doc":"Ecto queries.","ref":"Core.Queries.html"},{"type":"function","title":"Core.Queries.search_active/1","doc":"Retrurn list of `Operators` when `active` is `true`.","ref":"Core.Queries.html#search_active/1"},{"type":"function","title":"Example. - Core.Queries.search_active/1","doc":"iex> Core.Queries.search_active(true)\n   []","ref":"Core.Queries.html#search_active/1-example"},{"type":"function","title":"Core.Queries.search_calc_priority/0","doc":"Retrurn list of `value` is `price` or `priceext_priceint`, `priority`\nwhen `param` equal `calc_priority`.","ref":"Core.Queries.html#search_calc_priority/0"},{"type":"function","title":"Example. - Core.Queries.search_calc_priority/0","doc":"iex> Core.Queries.search_calc_priority()\n   []","ref":"Core.Queries.html#search_calc_priority/0-example"},{"type":"function","title":"Core.Queries.sort_price_ext/1","doc":"Sort list of `Operators` by `price_ext` to ASC.","ref":"Core.Queries.html#sort_price_ext/1"},{"type":"function","title":"Example. - Core.Queries.sort_price_ext/1","doc":"iex> Core.Queries.sort_price_ext([struct])\n    [struct]","ref":"Core.Queries.html#sort_price_ext/1-example"},{"type":"function","title":"Core.Queries.sort_priceext_priceint/1","doc":"Sort listis of `Operators` by `phone_number`\nwhen phone_number is valid and invalid.","ref":"Core.Queries.html#sort_priceext_priceint/1"},{"type":"function","title":"Example. - Core.Queries.sort_priceext_priceint/1","doc":"iex> Core.Queries.sort_priceext_priceint(\"+380984263462\")\n    []","ref":"Core.Queries.html#sort_priceext_priceint/1-example"},{"type":"function","title":"Core.Queries.sort_priority/1","doc":"Sort list of `Operators` by `priority` to ASC.","ref":"Core.Queries.html#sort_priority/1"},{"type":"function","title":"Example. - Core.Queries.sort_priority/1","doc":"iex> Core.Queries.sort_priority([struct])\n    [struct]","ref":"Core.Queries.html#sort_priority/1-example"},{"type":"function","title":"Core.Queries.sorted_by_operators/1","doc":"Sorted by listOperators to order.\n\n1. Founds param is `calc_priority` and value by Settings.\n2. Created list of operators when field is `active` equal `true`.\n3. When `calc_priority` is `price` - sorted operators by field's `:price_ext` with `ASC`\n4. When `calc_priority` is `priority` - sorted operators by field's `:priority` with `ASC`\n5. When `calc_priority` is `priceext_priceint` - took phone_number(+380984263462)\n   then parsed only phone's code and created list of operators by code and sorted\n   `:price_init` with `ASC`, then parsed only is none phone's code and created\n   list of operators by none's code and sorted `:price_ext` with `ASC`.\n   And created new list of operators from there are two list of operators.","ref":"Core.Queries.html#sorted_by_operators/1"},{"type":"function","title":"Example. - Core.Queries.sorted_by_operators/1","doc":"iex> Core.Queries.sorted_by_operators(\"+380984263462\")\n    []","ref":"Core.Queries.html#sorted_by_operators/1-example"},{"type":"type","title":"Core.Queries.word/0","doc":"","ref":"Core.Queries.html#t:word/0"},{"type":"module","title":"Core.Repo","doc":"Core Repo.","ref":"Core.Repo.html"},{"type":"function","title":"Core.Repo.aggregate/3","doc":"","ref":"Core.Repo.html#aggregate/3"},{"type":"function","title":"Core.Repo.aggregate/4","doc":"","ref":"Core.Repo.html#aggregate/4"},{"type":"function","title":"Core.Repo.all/2","doc":"","ref":"Core.Repo.html#all/2"},{"type":"function","title":"Core.Repo.checked_out?/0","doc":"","ref":"Core.Repo.html#checked_out?/0"},{"type":"function","title":"Core.Repo.checkout/2","doc":"","ref":"Core.Repo.html#checkout/2"},{"type":"function","title":"Core.Repo.child_spec/1","doc":"","ref":"Core.Repo.html#child_spec/1"},{"type":"function","title":"Core.Repo.config/0","doc":"","ref":"Core.Repo.html#config/0"},{"type":"function","title":"Core.Repo.default_options/1","doc":"","ref":"Core.Repo.html#default_options/1"},{"type":"function","title":"Core.Repo.delete/2","doc":"","ref":"Core.Repo.html#delete/2"},{"type":"function","title":"Core.Repo.delete!/2","doc":"","ref":"Core.Repo.html#delete!/2"},{"type":"function","title":"Core.Repo.delete_all/2","doc":"","ref":"Core.Repo.html#delete_all/2"},{"type":"function","title":"Core.Repo.disconnect_all/2","doc":"A convenience function for SQL-based repositories that forces all connections in the\npool to disconnect within the given interval.\n\nSee `Ecto.Adapters.SQL.disconnect_all/3` for more information.","ref":"Core.Repo.html#disconnect_all/2"},{"type":"function","title":"Core.Repo.exists?/2","doc":"","ref":"Core.Repo.html#exists?/2"},{"type":"function","title":"Core.Repo.explain/3","doc":"A convenience function for SQL-based repositories that executes an EXPLAIN statement or similar\ndepending on the adapter to obtain statistics for the given query.\n\nSee `Ecto.Adapters.SQL.explain/4` for more information.","ref":"Core.Repo.html#explain/3"},{"type":"function","title":"Core.Repo.get/3","doc":"","ref":"Core.Repo.html#get/3"},{"type":"function","title":"Core.Repo.get!/3","doc":"","ref":"Core.Repo.html#get!/3"},{"type":"function","title":"Core.Repo.get_by/3","doc":"","ref":"Core.Repo.html#get_by/3"},{"type":"function","title":"Core.Repo.get_by!/3","doc":"","ref":"Core.Repo.html#get_by!/3"},{"type":"function","title":"Core.Repo.get_dynamic_repo/0","doc":"","ref":"Core.Repo.html#get_dynamic_repo/0"},{"type":"function","title":"Core.Repo.in_transaction?/0","doc":"","ref":"Core.Repo.html#in_transaction?/0"},{"type":"function","title":"Core.Repo.init/2","doc":"Dynamically loads the repository url from the DATABASE_URL environment variable.\nbash> export DATABASE_URL='ecto://postgres:postgres@localhost/gateway'\nbash> export PORT='8080'\nbash> MIX_ENV=test PORT=8080 DATABASE_URL='ecto://postgres:postgres@localhost/gateway_test' mix tests","ref":"Core.Repo.html#init/2"},{"type":"function","title":"Core.Repo.insert/2","doc":"","ref":"Core.Repo.html#insert/2"},{"type":"function","title":"Core.Repo.insert!/2","doc":"","ref":"Core.Repo.html#insert!/2"},{"type":"function","title":"Core.Repo.insert_all/3","doc":"","ref":"Core.Repo.html#insert_all/3"},{"type":"function","title":"Core.Repo.insert_or_update/2","doc":"","ref":"Core.Repo.html#insert_or_update/2"},{"type":"function","title":"Core.Repo.insert_or_update!/2","doc":"","ref":"Core.Repo.html#insert_or_update!/2"},{"type":"function","title":"Core.Repo.load/2","doc":"","ref":"Core.Repo.html#load/2"},{"type":"function","title":"Core.Repo.one/2","doc":"","ref":"Core.Repo.html#one/2"},{"type":"function","title":"Core.Repo.one!/2","doc":"","ref":"Core.Repo.html#one!/2"},{"type":"function","title":"Core.Repo.preload/3","doc":"","ref":"Core.Repo.html#preload/3"},{"type":"function","title":"Core.Repo.prepare_query/3","doc":"","ref":"Core.Repo.html#prepare_query/3"},{"type":"function","title":"Core.Repo.put_dynamic_repo/1","doc":"","ref":"Core.Repo.html#put_dynamic_repo/1"},{"type":"function","title":"Core.Repo.query/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query/4` for more information.","ref":"Core.Repo.html#query/3"},{"type":"function","title":"Core.Repo.query!/3","doc":"A convenience function for SQL-based repositories that executes the given query.\n\nSee `Ecto.Adapters.SQL.query!/4` for more information.","ref":"Core.Repo.html#query!/3"},{"type":"function","title":"Core.Repo.query_many/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many/4` for more information.","ref":"Core.Repo.html#query_many/3"},{"type":"function","title":"Core.Repo.query_many!/3","doc":"A convenience function for SQL-based repositories that executes the given multi-result query.\n\nSee `Ecto.Adapters.SQL.query_many!/4` for more information.","ref":"Core.Repo.html#query_many!/3"},{"type":"function","title":"Core.Repo.reload/2","doc":"","ref":"Core.Repo.html#reload/2"},{"type":"function","title":"Core.Repo.reload!/2","doc":"","ref":"Core.Repo.html#reload!/2"},{"type":"function","title":"Core.Repo.rollback/1","doc":"","ref":"Core.Repo.html#rollback/1"},{"type":"function","title":"Core.Repo.start_link/1","doc":"","ref":"Core.Repo.html#start_link/1"},{"type":"function","title":"Core.Repo.stop/1","doc":"","ref":"Core.Repo.html#stop/1"},{"type":"function","title":"Core.Repo.stream/2","doc":"","ref":"Core.Repo.html#stream/2"},{"type":"function","title":"Core.Repo.to_sql/2","doc":"A convenience function for SQL-based repositories that translates the given query to SQL.\n\nSee `Ecto.Adapters.SQL.to_sql/3` for more information.","ref":"Core.Repo.html#to_sql/2"},{"type":"function","title":"Core.Repo.transaction/2","doc":"","ref":"Core.Repo.html#transaction/2"},{"type":"function","title":"Core.Repo.update/2","doc":"","ref":"Core.Repo.html#update/2"},{"type":"function","title":"Core.Repo.update!/2","doc":"","ref":"Core.Repo.html#update!/2"},{"type":"function","title":"Core.Repo.update_all/3","doc":"","ref":"Core.Repo.html#update_all/3"},{"type":"module","title":"Core.Seeder.Deleted.Logs","doc":"Deleted are seeds whole Logs.","ref":"Core.Seeder.Deleted.Logs.html"},{"type":"function","title":"Core.Seeder.Deleted.Logs.start!/0","doc":"","ref":"Core.Seeder.Deleted.Logs.html#start!/0"},{"type":"module","title":"Core.Seeder.Deleted.Monitoring","doc":"Deleted are seeds whole Monitoring.","ref":"Core.Seeder.Deleted.Monitoring.html"},{"type":"function","title":"Core.Seeder.Deleted.Monitoring.start!/0","doc":"","ref":"Core.Seeder.Deleted.Monitoring.html#start!/0"},{"type":"module","title":"Core.Seeder.Deleted.Operators","doc":"Deleted are seeds whole an Operators.","ref":"Core.Seeder.Deleted.Operators.html"},{"type":"function","title":"Core.Seeder.Deleted.Operators.start!/0","doc":"","ref":"Core.Seeder.Deleted.Operators.html#start!/0"},{"type":"module","title":"Core.Seeder.Deleted.Settings","doc":"Deleted are seeds whole Settings.","ref":"Core.Seeder.Deleted.Settings.html"},{"type":"function","title":"Core.Seeder.Deleted.Settings.start!/0","doc":"","ref":"Core.Seeder.Deleted.Settings.html#start!/0"},{"type":"module","title":"Core.Seeder.Deleted.Spring","doc":"Deleted are seeds whole Spring.","ref":"Core.Seeder.Deleted.Spring.html"},{"type":"function","title":"Core.Seeder.Deleted.Spring.start!/0","doc":"","ref":"Core.Seeder.Deleted.Spring.html#start!/0"},{"type":"module","title":"Core.Seeder.Logs","doc":"Seeds for `Core.Logs` context.","ref":"Core.Seeder.Logs.html"},{"type":"function","title":"Core.Seeder.Logs.reset_database!/0","doc":"","ref":"Core.Seeder.Logs.html#reset_database!/0"},{"type":"function","title":"Core.Seeder.Logs.seed!/0","doc":"","ref":"Core.Seeder.Logs.html#seed!/0"},{"type":"module","title":"Core.Seeder.Monitoring","doc":"Seeds for `Core.Monitoring` context.","ref":"Core.Seeder.Monitoring.html"},{"type":"function","title":"Core.Seeder.Monitoring.random_boolean/0","doc":"","ref":"Core.Seeder.Monitoring.html#random_boolean/0"},{"type":"function","title":"Core.Seeder.Monitoring.random_integers/1","doc":"","ref":"Core.Seeder.Monitoring.html#random_integers/1"},{"type":"function","title":"Core.Seeder.Monitoring.random_status_name/0","doc":"","ref":"Core.Seeder.Monitoring.html#random_status_name/0"},{"type":"function","title":"Core.Seeder.Monitoring.reset_database!/0","doc":"","ref":"Core.Seeder.Monitoring.html#reset_database!/0"},{"type":"function","title":"Core.Seeder.Monitoring.seed!/0","doc":"","ref":"Core.Seeder.Monitoring.html#seed!/0"},{"type":"module","title":"Core.Seeder.Operators","doc":"Seeds for `Core.Operators` context.","ref":"Core.Seeder.Operators.html"},{"type":"function","title":"Core.Seeder.Operators.random_boolean/0","doc":"","ref":"Core.Seeder.Operators.html#random_boolean/0"},{"type":"function","title":"Core.Seeder.Operators.random_float/0","doc":"","ref":"Core.Seeder.Operators.html#random_float/0"},{"type":"function","title":"Core.Seeder.Operators.random_integers/1","doc":"","ref":"Core.Seeder.Operators.html#random_integers/1"},{"type":"function","title":"Core.Seeder.Operators.random_name_operator/0","doc":"","ref":"Core.Seeder.Operators.html#random_name_operator/0"},{"type":"function","title":"Core.Seeder.Operators.random_names/0","doc":"","ref":"Core.Seeder.Operators.html#random_names/0"},{"type":"function","title":"Core.Seeder.Operators.random_phone_code/0","doc":"","ref":"Core.Seeder.Operators.html#random_phone_code/0"},{"type":"function","title":"Core.Seeder.Operators.reset_database!/0","doc":"","ref":"Core.Seeder.Operators.html#reset_database!/0"},{"type":"function","title":"Core.Seeder.Operators.seed!/0","doc":"","ref":"Core.Seeder.Operators.html#seed!/0"},{"type":"module","title":"Core.Seeder.Repo","doc":"Seeds for `Core.Seeder.Repo` repository.","ref":"Core.Seeder.Repo.html"},{"type":"function","title":"Core.Seeder.Repo.deleted!/0","doc":"","ref":"Core.Seeder.Repo.html#deleted!/0"},{"type":"function","title":"Core.Seeder.Repo.seed!/0","doc":"","ref":"Core.Seeder.Repo.html#seed!/0"},{"type":"function","title":"Core.Seeder.Repo.updated!/0","doc":"","ref":"Core.Seeder.Repo.html#updated!/0"},{"type":"module","title":"Core.Seeder.Settings","doc":"Seeds for `Core.Settings` context.","ref":"Core.Seeder.Settings.html"},{"type":"function","title":"Core.Seeder.Settings.reset_database!/0","doc":"","ref":"Core.Seeder.Settings.html#reset_database!/0"},{"type":"function","title":"Core.Seeder.Settings.seed!/0","doc":"","ref":"Core.Seeder.Settings.html#seed!/0"},{"type":"module","title":"Core.Seeder.Spring","doc":"Seeds for `Core.Spring` context.","ref":"Core.Seeder.Spring.html"},{"type":"function","title":"Core.Seeder.Spring.random_uuid/1","doc":"","ref":"Core.Seeder.Spring.html#random_uuid/1"},{"type":"function","title":"Core.Seeder.Spring.reset_database!/0","doc":"","ref":"Core.Seeder.Spring.html#reset_database!/0"},{"type":"function","title":"Core.Seeder.Spring.seed!/0","doc":"","ref":"Core.Seeder.Spring.html#seed!/0"},{"type":"module","title":"Core.Seeder.Updated.Logs","doc":"An update are seeds whole the logs.","ref":"Core.Seeder.Updated.Logs.html"},{"type":"function","title":"Core.Seeder.Updated.Logs.start!/0","doc":"","ref":"Core.Seeder.Updated.Logs.html#start!/0"},{"type":"module","title":"Core.Seeder.Updated.Operators","doc":"An update are seeds whole an operators.","ref":"Core.Seeder.Updated.Operators.html"},{"type":"function","title":"Core.Seeder.Updated.Operators.random_boolean/0","doc":"","ref":"Core.Seeder.Updated.Operators.html#random_boolean/0"},{"type":"function","title":"Core.Seeder.Updated.Operators.random_float/0","doc":"","ref":"Core.Seeder.Updated.Operators.html#random_float/0"},{"type":"function","title":"Core.Seeder.Updated.Operators.random_integers/1","doc":"","ref":"Core.Seeder.Updated.Operators.html#random_integers/1"},{"type":"function","title":"Core.Seeder.Updated.Operators.random_name_operator/0","doc":"","ref":"Core.Seeder.Updated.Operators.html#random_name_operator/0"},{"type":"function","title":"Core.Seeder.Updated.Operators.random_names/0","doc":"","ref":"Core.Seeder.Updated.Operators.html#random_names/0"},{"type":"function","title":"Core.Seeder.Updated.Operators.random_phone_code/0","doc":"","ref":"Core.Seeder.Updated.Operators.html#random_phone_code/0"},{"type":"function","title":"Core.Seeder.Updated.Operators.start!/0","doc":"","ref":"Core.Seeder.Updated.Operators.html#start!/0"},{"type":"module","title":"Core.Seeder.Updated.Settings","doc":"An update are seeds whole settings.","ref":"Core.Seeder.Updated.Settings.html"},{"type":"function","title":"Core.Seeder.Updated.Settings.random_param/0","doc":"","ref":"Core.Seeder.Updated.Settings.html#random_param/0"},{"type":"function","title":"Core.Seeder.Updated.Settings.random_value/0","doc":"","ref":"Core.Seeder.Updated.Settings.html#random_value/0"},{"type":"function","title":"Core.Seeder.Updated.Settings.start!/0","doc":"","ref":"Core.Seeder.Updated.Settings.html#start!/0"},{"type":"module","title":"Core.Settings","doc":"The Settings context.","ref":"Core.Settings.html"},{"type":"function","title":"Core.Settings.create_setting/1","doc":"Creates Setting.","ref":"Core.Settings.html#create_setting/1"},{"type":"function","title":"Examples - Core.Settings.create_setting/1","doc":"iex> create_setting(%{field: value})\n    {:ok, %Setting{}}\n\n    iex> create_setting(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Core.Settings.html#create_setting/1-examples"},{"type":"function","title":"Core.Settings.get_setting/1","doc":"Gets a single Setting.\n\nRaises `Ecto.NoResultsError` if an Addon does not exist.","ref":"Core.Settings.html#get_setting/1"},{"type":"function","title":"Examples - Core.Settings.get_setting/1","doc":"iex> get_setting(123)\n    %Setting{}\n\n    iex> get_setting(456)\n    {:error, %Ecto.Changeset{}}","ref":"Core.Settings.html#get_setting/1-examples"},{"type":"function","title":"Core.Settings.list_setting/0","doc":"Returns the list of Setting.","ref":"Core.Settings.html#list_setting/0"},{"type":"function","title":"Core.Settings.update_setting/2","doc":"Updates Setting.","ref":"Core.Settings.html#update_setting/2"},{"type":"function","title":"Examples - Core.Settings.update_setting/2","doc":"iex> update_setting(struct, %{field: new_value})\n    {:ok, %Setting{}}\n\n    iex> update_setting(struct, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Core.Settings.html#update_setting/2-examples"},{"type":"type","title":"Core.Settings.error_tuple/0","doc":"","ref":"Core.Settings.html#t:error_tuple/0"},{"type":"type","title":"Core.Settings.reason/0","doc":"","ref":"Core.Settings.html#t:reason/0"},{"type":"type","title":"Core.Settings.result/0","doc":"","ref":"Core.Settings.html#t:result/0"},{"type":"type","title":"Core.Settings.success_tuple/0","doc":"","ref":"Core.Settings.html#t:success_tuple/0"},{"type":"type","title":"Core.Settings.t/0","doc":"","ref":"Core.Settings.html#t:t/0"},{"type":"module","title":"Core.Settings.Helpers.SettingEnum","doc":"","ref":"Core.Settings.Helpers.SettingEnum.html"},{"type":"function","title":"Core.Settings.Helpers.SettingEnum.cast/1","doc":"","ref":"Core.Settings.Helpers.SettingEnum.html#cast/1"},{"type":"function","title":"Core.Settings.Helpers.SettingEnum.create_type/0","doc":"","ref":"Core.Settings.Helpers.SettingEnum.html#create_type/0"},{"type":"function","title":"Core.Settings.Helpers.SettingEnum.drop_type/0","doc":"","ref":"Core.Settings.Helpers.SettingEnum.html#drop_type/0"},{"type":"function","title":"Core.Settings.Helpers.SettingEnum.dump/1","doc":"","ref":"Core.Settings.Helpers.SettingEnum.html#dump/1"},{"type":"function","title":"Core.Settings.Helpers.SettingEnum.embed_as/1","doc":"","ref":"Core.Settings.Helpers.SettingEnum.html#embed_as/1"},{"type":"function","title":"Core.Settings.Helpers.SettingEnum.equal?/2","doc":"","ref":"Core.Settings.Helpers.SettingEnum.html#equal?/2"},{"type":"function","title":"Core.Settings.Helpers.SettingEnum.load/1","doc":"","ref":"Core.Settings.Helpers.SettingEnum.html#load/1"},{"type":"function","title":"Core.Settings.Helpers.SettingEnum.schema/0","doc":"","ref":"Core.Settings.Helpers.SettingEnum.html#schema/0"},{"type":"function","title":"Core.Settings.Helpers.SettingEnum.schemaless_type/0","doc":"","ref":"Core.Settings.Helpers.SettingEnum.html#schemaless_type/0"},{"type":"function","title":"Core.Settings.Helpers.SettingEnum.type/0","doc":"","ref":"Core.Settings.Helpers.SettingEnum.html#type/0"},{"type":"function","title":"Core.Settings.Helpers.SettingEnum.valid_value?/1","doc":"","ref":"Core.Settings.Helpers.SettingEnum.html#valid_value?/1"},{"type":"type","title":"Core.Settings.Helpers.SettingEnum.t/0","doc":"","ref":"Core.Settings.Helpers.SettingEnum.html#t:t/0"},{"type":"module","title":"Core.Settings.Setting","doc":"Schema for Setting.","ref":"Core.Settings.Setting.html"},{"type":"function","title":"Core.Settings.Setting.changeset/1","doc":"","ref":"Core.Settings.Setting.html#changeset/1"},{"type":"function","title":"Core.Settings.Setting.changeset/2","doc":"Create changeset for Setting.","ref":"Core.Settings.Setting.html#changeset/2"},{"type":"function","title":"Core.Settings.Setting.create/1","doc":"","ref":"Core.Settings.Setting.html#create/1"},{"type":"function","title":"Core.Settings.Setting.find/1","doc":"","ref":"Core.Settings.Setting.html#find/1"},{"type":"function","title":"Core.Settings.Setting.find_by/1","doc":"","ref":"Core.Settings.Setting.html#find_by/1"},{"type":"type","title":"Core.Settings.Setting.t/0","doc":"","ref":"Core.Settings.Setting.html#t:t/0"},{"type":"module","title":"Core.Spring","doc":"The Message context.","ref":"Core.Spring.html"},{"type":"function","title":"Core.Spring.create_message/1","doc":"Creates Message.","ref":"Core.Spring.html#create_message/1"},{"type":"function","title":"Examples - Core.Spring.create_message/1","doc":"iex> create_message(%{field: value})\n    {:ok, %Message{}}\n\n    iex> create_message(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Core.Spring.html#create_message/1-examples"},{"type":"function","title":"Core.Spring.create_message_via_connector/1","doc":"Creates Message with SmsLogs and sorted Operators","ref":"Core.Spring.html#create_message_via_connector/1"},{"type":"function","title":"Examples - Core.Spring.create_message_via_connector/1","doc":"iex> create_message_via_connector(%{field: value})\n    {:ok, %Message{}}\n\n    iex> create_message_via_connector(%{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Core.Spring.html#create_message_via_connector/1-examples"},{"type":"function","title":"Core.Spring.get_message/1","doc":"Gets a single Message.\n\nRaises `Ecto.NoResultsError` if Message does not exist.","ref":"Core.Spring.html#get_message/1"},{"type":"function","title":"Examples - Core.Spring.get_message/1","doc":"iex> get_message(123)\n    %Message{}\n\n    iex> get_message(456)\n    {:error, %Ecto.Changeset{}}","ref":"Core.Spring.html#get_message/1-examples"},{"type":"function","title":"Core.Spring.update_message/2","doc":"Updates Message.","ref":"Core.Spring.html#update_message/2"},{"type":"function","title":"Examples - Core.Spring.update_message/2","doc":"iex> update_message(struct, %{field: new_value})\n    {:ok, %Message{}}\n\n    iex> update_message(struct, %{field: bad_value})\n    {:error, %Ecto.Changeset{}}","ref":"Core.Spring.html#update_message/2-examples"},{"type":"type","title":"Core.Spring.error_tuple/0","doc":"","ref":"Core.Spring.html#t:error_tuple/0"},{"type":"type","title":"Core.Spring.reason/0","doc":"","ref":"Core.Spring.html#t:reason/0"},{"type":"type","title":"Core.Spring.result/0","doc":"","ref":"Core.Spring.html#t:result/0"},{"type":"type","title":"Core.Spring.success_tuple/0","doc":"","ref":"Core.Spring.html#t:success_tuple/0"},{"type":"type","title":"Core.Spring.t/0","doc":"","ref":"Core.Spring.html#t:t/0"},{"type":"module","title":"Core.Spring.Message","doc":"Schema for Message.","ref":"Core.Spring.Message.html"},{"type":"function","title":"Core.Spring.Message.changeset/1","doc":"","ref":"Core.Spring.Message.html#changeset/1"},{"type":"function","title":"Core.Spring.Message.changeset/2","doc":"Create changeset for Message.","ref":"Core.Spring.Message.html#changeset/2"},{"type":"function","title":"Core.Spring.Message.create/1","doc":"","ref":"Core.Spring.Message.html#create/1"},{"type":"function","title":"Core.Spring.Message.find/1","doc":"","ref":"Core.Spring.Message.html#find/1"},{"type":"function","title":"Core.Spring.Message.find_by/1","doc":"","ref":"Core.Spring.Message.html#find_by/1"},{"type":"type","title":"Core.Spring.Message.t/0","doc":"","ref":"Core.Spring.Message.html#t:t/0"},{"type":"module","title":"Gateway","doc":"The entrypoint for defining your web interface, such\nas controllers, components, channels, and so on.\n\nThis can be used in your application as:\n\n    use Gateway, :controller\n    use Gateway, :html\n\nThe definitions below will be executed for every controller,\ncomponent, etc, so keep them short and clean, focused\non imports, uses and aliases.\n\nDo NOT define functions inside the quoted expressions\nbelow. Instead, define additional modules and import\nthose modules here.","ref":"Gateway.html"},{"type":"macro","title":"Gateway.__using__/1","doc":"When used, dispatch to the appropriate controller/view/etc.","ref":"Gateway.html#__using__/1"},{"type":"function","title":"Gateway.channel/0","doc":"","ref":"Gateway.html#channel/0"},{"type":"function","title":"Gateway.controller/0","doc":"","ref":"Gateway.html#controller/0"},{"type":"function","title":"Gateway.router/0","doc":"","ref":"Gateway.html#router/0"},{"type":"function","title":"Gateway.static_paths/0","doc":"","ref":"Gateway.html#static_paths/0"},{"type":"function","title":"Gateway.verified_routes/0","doc":"","ref":"Gateway.html#verified_routes/0"},{"type":"module","title":"Gateway.Endpoint","doc":"","ref":"Gateway.Endpoint.html"},{"type":"function","title":"Gateway.Endpoint.broadcast/3","doc":"","ref":"Gateway.Endpoint.html#broadcast/3"},{"type":"function","title":"Gateway.Endpoint.broadcast!/3","doc":"","ref":"Gateway.Endpoint.html#broadcast!/3"},{"type":"function","title":"Gateway.Endpoint.broadcast_from/4","doc":"","ref":"Gateway.Endpoint.html#broadcast_from/4"},{"type":"function","title":"Gateway.Endpoint.broadcast_from!/4","doc":"","ref":"Gateway.Endpoint.html#broadcast_from!/4"},{"type":"function","title":"Gateway.Endpoint.call/2","doc":"","ref":"Gateway.Endpoint.html#call/2"},{"type":"function","title":"Gateway.Endpoint.child_spec/1","doc":"Returns the child specification to start the endpoint\nunder a supervision tree.","ref":"Gateway.Endpoint.html#child_spec/1"},{"type":"function","title":"Gateway.Endpoint.config/2","doc":"Returns the endpoint configuration for `key`\n\nReturns `default` if the key does not exist.","ref":"Gateway.Endpoint.html#config/2"},{"type":"function","title":"Gateway.Endpoint.config_change/2","doc":"Reloads the configuration given the application environment changes.","ref":"Gateway.Endpoint.html#config_change/2"},{"type":"function","title":"Gateway.Endpoint.host/0","doc":"Returns the host for the given endpoint.","ref":"Gateway.Endpoint.html#host/0"},{"type":"function","title":"Gateway.Endpoint.init/1","doc":"","ref":"Gateway.Endpoint.html#init/1"},{"type":"function","title":"Gateway.Endpoint.init/2","doc":"Callback invoked for dynamically configuring the endpoint.\n\nIt receives the endpoint configuration and checks if\nconfiguration should be loaded from the system environment.","ref":"Gateway.Endpoint.html#init/2"},{"type":"function","title":"Gateway.Endpoint.local_broadcast/3","doc":"","ref":"Gateway.Endpoint.html#local_broadcast/3"},{"type":"function","title":"Gateway.Endpoint.local_broadcast_from/4","doc":"","ref":"Gateway.Endpoint.html#local_broadcast_from/4"},{"type":"function","title":"Gateway.Endpoint.node_name/0","doc":"","ref":"Gateway.Endpoint.html#node_name/0"},{"type":"function","title":"Gateway.Endpoint.path/1","doc":"Generates the path information when routing to this endpoint.","ref":"Gateway.Endpoint.html#path/1"},{"type":"function","title":"Gateway.Endpoint.publish_mutation/3","doc":"","ref":"Gateway.Endpoint.html#publish_mutation/3"},{"type":"function","title":"Gateway.Endpoint.publish_subscription/2","doc":"","ref":"Gateway.Endpoint.html#publish_subscription/2"},{"type":"function","title":"Gateway.Endpoint.script_name/0","doc":"Generates the script name.","ref":"Gateway.Endpoint.html#script_name/0"},{"type":"function","title":"Gateway.Endpoint.server_info/1","doc":"Returns the address and port that the server is running on","ref":"Gateway.Endpoint.html#server_info/1"},{"type":"function","title":"Gateway.Endpoint.start_link/1","doc":"Starts the endpoint supervision tree.\n\nAll other options are merged into the endpoint configuration.","ref":"Gateway.Endpoint.html#start_link/1"},{"type":"function","title":"Gateway.Endpoint.static_integrity/1","doc":"Generates a base64-encoded cryptographic hash (sha512) to a static file\nin `priv/static`. Meant to be used for Subresource Integrity with CDNs.","ref":"Gateway.Endpoint.html#static_integrity/1"},{"type":"function","title":"Gateway.Endpoint.static_lookup/1","doc":"Returns a two item tuple with the first item being the `static_path`\nand the second item being the `static_integrity`.","ref":"Gateway.Endpoint.html#static_lookup/1"},{"type":"function","title":"Gateway.Endpoint.static_path/1","doc":"Generates a route to a static file in `priv/static`.","ref":"Gateway.Endpoint.html#static_path/1"},{"type":"function","title":"Gateway.Endpoint.static_url/0","doc":"Generates the static URL without any path information.\n\nIt uses the configuration under `:static_url` to generate\nsuch. It falls back to `:url` if `:static_url` is not set.","ref":"Gateway.Endpoint.html#static_url/0"},{"type":"function","title":"Gateway.Endpoint.struct_url/0","doc":"Generates the endpoint base URL but as a `URI` struct.\n\nIt uses the configuration under `:url` to generate such.\nUseful for manipulating the URL data and passing it to\nURL helpers.","ref":"Gateway.Endpoint.html#struct_url/0"},{"type":"function","title":"Gateway.Endpoint.subscribe/2","doc":"","ref":"Gateway.Endpoint.html#subscribe/2"},{"type":"function","title":"Gateway.Endpoint.unsubscribe/1","doc":"","ref":"Gateway.Endpoint.html#unsubscribe/1"},{"type":"function","title":"Gateway.Endpoint.url/0","doc":"Generates the endpoint base URL without any path information.\n\nIt uses the configuration under `:url` to generate such.","ref":"Gateway.Endpoint.html#url/0"},{"type":"module","title":"Gateway.ErrorJSON","doc":"","ref":"Gateway.ErrorJSON.html"},{"type":"function","title":"Gateway.ErrorJSON.render/2","doc":"","ref":"Gateway.ErrorJSON.html#render/2"},{"type":"module","title":"Gateway.GraphQL.Data","doc":"A single Dataloader struct can have many different sources,\nwhich represent different ways to load data, provides an easy\nway efficiently load data in batches.","ref":"Gateway.GraphQL.Data.html"},{"type":"function","title":"Gateway.GraphQL.Data.data/0","doc":"","ref":"Gateway.GraphQL.Data.html#data/0"},{"type":"function","title":"Gateway.GraphQL.Data.query/2","doc":"","ref":"Gateway.GraphQL.Data.html#query/2"},{"type":"type","title":"Gateway.GraphQL.Data.option/0","doc":"","ref":"Gateway.GraphQL.Data.html#t:option/0"},{"type":"type","title":"Gateway.GraphQL.Data.source_name/0","doc":"","ref":"Gateway.GraphQL.Data.html#t:source_name/0"},{"type":"type","title":"Gateway.GraphQL.Data.t/0","doc":"","ref":"Gateway.GraphQL.Data.html#t:t/0"},{"type":"module","title":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver","doc":"The Single Page GraphQL resolvers.","ref":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.html"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.index/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.html#index/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.public/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.html#public/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.token/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.html#token/3"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.error_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.html#t:error_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.result/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.html#t:result/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.success_list/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.html#t:success_list/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.success_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.html#t:success_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.t/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Home.IndexPageResolver.html#t:t/0"},{"type":"module","title":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver","doc":"The SmsLog GraphQL resolvers.","ref":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.html"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.create/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.html#create/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.show/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.html#show/3"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.error_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.html#t:error_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.result/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.html#t:result/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.success_list/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.html#t:success_list/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.success_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.html#t:success_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.t/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Logs.SmsLogResolver.html#t:t/0"},{"type":"module","title":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver","doc":"The Status GraphQL resolvers.","ref":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.html"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.create/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.html#create/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.list/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.html#list/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.show/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.html#show/3"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.error_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.html#t:error_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.result/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.html#t:result/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.success_list/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.html#t:success_list/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.success_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.html#t:success_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.t/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Monitoring.StatusResolver.html#t:t/0"},{"type":"module","title":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver","doc":"The Operator GraphQL resolvers.","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.html"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.create/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.html#create/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.list/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.html#list/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.show/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.html#show/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.update/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.html#update/3"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.error_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.html#t:error_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.result/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.html#t:result/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.success_list/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.html#t:success_list/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.success_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.html#t:success_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.t/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorResolver.html#t:t/0"},{"type":"module","title":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver","doc":"The OperatorType GraphQL resolvers.","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.html"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.create/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.html#create/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.list/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.html#list/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.show/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.html#show/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.update/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.html#update/3"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.error_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.html#t:error_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.result/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.html#t:result/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.success_list/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.html#t:success_list/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.success_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.html#t:success_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.t/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Operators.OperatorTypeResolver.html#t:t/0"},{"type":"module","title":"Gateway.GraphQL.Resolvers.Settings.SettingResolver","doc":"The Setting GraphQL resolvers.","ref":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.html"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.create/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.html#create/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.list/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.html#list/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.show/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.html#show/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.update/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.html#update/3"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.error_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.html#t:error_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.result/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.html#t:result/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.success_list/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.html#t:success_list/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.success_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.html#t:success_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.t/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Settings.SettingResolver.html#t:t/0"},{"type":"module","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver","doc":"The Message GraphQL resolvers.","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.by_connector/2","doc":"","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html#by_connector/2"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.create/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html#create/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.create_message_via_connector/1","doc":"","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html#create_message_via_connector/1"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.create_via_connector/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html#create_via_connector/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.selected_connector/2","doc":"","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html#selected_connector/2"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.show/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html#show/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.sorted_operators/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html#sorted_operators/3"},{"type":"function","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.update/3","doc":"","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html#update/3"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.error_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html#t:error_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.result/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html#t:result/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.success_list/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html#t:success_list/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.success_tuple/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html#t:success_tuple/0"},{"type":"type","title":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.t/0","doc":"","ref":"Gateway.GraphQL.Resolvers.Spring.MessageResolver.html#t:t/0"},{"type":"module","title":"Gateway.GraphQL.Schema","doc":"The GraphQL schema.","ref":"Gateway.GraphQL.Schema.html"},{"type":"module","title":"Gateway.GraphQL.Schemas.Home.IndexPageTypes","doc":"The single page GraphQL interface.","ref":"Gateway.GraphQL.Schemas.Home.IndexPageTypes.html"},{"type":"module","title":"Gateway.GraphQL.Schemas.Logs.SmsLogTypes","doc":"The SmsLog GraphQL interface.","ref":"Gateway.GraphQL.Schemas.Logs.SmsLogTypes.html"},{"type":"module","title":"Gateway.GraphQL.Schemas.Monitoring.StatusTypes","doc":"The Status GraphQL interface.","ref":"Gateway.GraphQL.Schemas.Monitoring.StatusTypes.html"},{"type":"module","title":"Gateway.GraphQL.Schemas.Operators.OperatorTypeTypes","doc":"The OperatorTypes GraphQL interface.","ref":"Gateway.GraphQL.Schemas.Operators.OperatorTypeTypes.html"},{"type":"module","title":"Gateway.GraphQL.Schemas.Operators.OperatorTypes","doc":"The Operators GraphQL interface.","ref":"Gateway.GraphQL.Schemas.Operators.OperatorTypes.html"},{"type":"module","title":"Gateway.GraphQL.Schemas.Settings.SettingTypes","doc":"The Setting GraphQL interface.","ref":"Gateway.GraphQL.Schemas.Settings.SettingTypes.html"},{"type":"module","title":"Gateway.GraphQL.Schemas.Spring.MessageTypes","doc":"The Message GraphQL interface.","ref":"Gateway.GraphQL.Schemas.Spring.MessageTypes.html"},{"type":"module","title":"Gateway.GraphQL.Schemas.UuidTypes","doc":"The UUID4 scalar type allows UUID4 compliant strings to be passed in and out.\nRequires `{ :ecto, \">= 0.0.0\" }` package: https://github.com/elixir-ecto/ecto","ref":"Gateway.GraphQL.Schemas.UuidTypes.html"},{"type":"module","title":"Gateway.HomeController","doc":"","ref":"Gateway.HomeController.html"},{"type":"function","title":"Gateway.HomeController.index/2","doc":"","ref":"Gateway.HomeController.html#index/2"},{"type":"function","title":"Gateway.HomeController.swagger_path_index/1","doc":"","ref":"Gateway.HomeController.html#swagger_path_index/1"},{"type":"module","title":"Gateway.HomeJSON","doc":"","ref":"Gateway.HomeJSON.html"},{"type":"function","title":"Gateway.HomeJSON.render/2","doc":"","ref":"Gateway.HomeJSON.html#render/2"},{"type":"module","title":"Gateway.Router","doc":"","ref":"Gateway.Router.html"},{"type":"function","title":"Gateway.Router.api/2","doc":"","ref":"Gateway.Router.html#api/2"},{"type":"function","title":"Gateway.Router.call/2","doc":"Callback invoked by Plug on every request.","ref":"Gateway.Router.html#call/2"},{"type":"function","title":"Gateway.Router.init/1","doc":"Callback required by Plug that initializes the router\nfor serving web requests.","ref":"Gateway.Router.html#init/1"},{"type":"function","title":"Gateway.Router.swagger_info/0","doc":"","ref":"Gateway.Router.html#swagger_info/0"},{"type":"module","title":"Gateway.Telemetry","doc":"Telemetry is a lightweight library for dynamic dispatching of events,\nwith a focus on metrics and instrumentation.","ref":"Gateway.Telemetry.html"},{"type":"function","title":"Gateway.Telemetry.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Gateway.Telemetry.html#child_spec/1"},{"type":"function","title":"Gateway.Telemetry.metrics/0","doc":"","ref":"Gateway.Telemetry.html#metrics/0"},{"type":"function","title":"Gateway.Telemetry.start_link/1","doc":"","ref":"Gateway.Telemetry.html#start_link/1"},{"type":"module","title":"KaffeCodealong","doc":"Documentation for `KaffeCodealong`.","ref":"KaffeCodealong.html"},{"type":"module","title":"MessageConsumer","doc":"Documentation for `MessageConsumer`.","ref":"MessageConsumer.html"},{"type":"module","title":"MessageProducer","doc":"Documentation for `MessageProducer`.","ref":"MessageProducer.html"},{"type":"module","title":"Providers","doc":"Documentation for `Providers`.","ref":"Providers.html"},{"type":"module","title":"Providers.Dia","doc":"Documentation for `Dia`.","ref":"Providers.Dia.html"},{"type":"function","title":"Providers.Dia.auth/0","doc":"","ref":"Providers.Dia.html#auth/0"},{"type":"function","title":"Providers.Dia.register/2","doc":"","ref":"Providers.Dia.html#register/2"},{"type":"function","title":"Providers.Dia.result/2","doc":"","ref":"Providers.Dia.html#result/2"},{"type":"function","title":"Providers.Dia.status/2","doc":"","ref":"Providers.Dia.html#status/2"},{"type":"function","title":"Providers.Dia.stop/2","doc":"","ref":"Providers.Dia.html#stop/2"},{"type":"function","title":"Providers.Dia.template/1","doc":"","ref":"Providers.Dia.html#template/1"},{"type":"module","title":"Providers.Intertelecom","doc":"Documentation for `Intertelecom`.","ref":"Providers.Intertelecom.html"},{"type":"module","title":"Providers.Kyivstar","doc":"Documentation for `Kyivstar`.","ref":"Providers.Kyivstar.html"},{"type":"module","title":"Providers.Lifecell","doc":"Documentation for `Lifecell`.","ref":"Providers.Lifecell.html"},{"type":"module","title":"Providers.Telegram","doc":"Documentation for `Telegram`.","ref":"Providers.Telegram.html"},{"type":"module","title":"Providers.Viber","doc":"Documentation for `Viber`.","ref":"Providers.Viber.html"},{"type":"module","title":"Providers.Vodafone","doc":"Documentation for `Vodafone`.","ref":"Providers.Vodafone.html"}],"content_type":"text/markdown"}